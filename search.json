[{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_advanced_multidimension_Rao.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Rasterdiv: Derive multidimension Rao's Index.","text":"create two RasterLayers representing environmental conditions non-random spatial patterns. fist create grid. spatial autocorrelated pattern obtained using semivariogram model defined sill (value semivariogram attains range) range (distance 0 spatial correlation) predicting semivariogram model lattice grid using unconditional Gaussian simulation. add spatial patterns grid obtain two spatially autocorrelated rasters. autocorrelated surfaces , example, represent values two plant functional traits cell. Now calculate multidimension Rao’s index two different moving windows alpha values. output nested list RasterLayers can transform stack RasterLayers plotted together input layers, follows:","code":"gridDim <- 40 # 10000m/250 m = 40 columns and rows xy <- expand.grid(x=1:gridDim, y=1:gridDim) varioMod <- vgm(psill=0.005, range=100, model='Exp') # psill=partial sill=(sill-nugget) # Set up an additional variable from simple kriging zDummy <- gstat(formula=z~1,                  locations = ~x+y,                  dummy=TRUE,                 beta=200,                  model=varioMod,                  nmax=1) # Generate a randomly autocorrelated predictor data field set.seed(123) xyz <- predict(zDummy, newdata=xy, nsim=2) # [using unconditional Gaussian simulation] utm32N <- \"+proj=utm +zone=32 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\" r <- raster(nrow=40, ncol=40, crs=utm32N, ext=extent(0,10000, 0,10000)) r1 <- raster(nrow=40, ncol=40, crs=utm32N, ext=extent(0,10000, 0,10000)) values(r)=xyz$sim1 values(r1)=xyz$sim2 mRao <- paRao(x=list(r,r1), window=c(3,5), alpha=c(1,Inf), na.tolerance=1, method=\"multidimension\",simplify=3, debugging=TRUE) plot(stack(r,r1,stack(mRao[[1]]),stack(mRao[[2]])), nc = 2, nr = 3)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_area_based_Rao.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Rasterdiv: Area-based Rao's index.","text":"RasterLayer called copNDVI loaded together package rasterdiv. copNDVI 8-bit raster, meaning pixel values range 0 255. stretch match familiar (-1,1) values range using raster::stretch(copNDVI,minv=-1,maxv=1) .","code":""},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_area_based_Rao.html","id":"reclassify-ndvi","dir":"Articles","previous_headings":"","what":"Reclassify NDVI","title":"Rasterdiv: Area-based Rao's index.","text":"Pixels values 253, 254 255 (water) set NA’s.","code":"copNDVI <- raster::reclassify(copNDVI, cbind(252,255, NA), right=TRUE)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_area_based_Rao.html","id":"resample-ndvi-to-a-coarser-resolution","dir":"Articles","previous_headings":"","what":"Resample NDVI to a coarser resolution","title":"Rasterdiv: Area-based Rao's index.","text":"speed calculation, RasterLayer “resampled” resolution 10 times coarser original cut Africa.","code":"#Resample using raster::aggregate and a linear factor of 10 copNDVIlr <- raster::aggregate(copNDVI, fact=10) #Set float numbers as integers to further speed up the calculation storage.mode(copNDVIlr[]) = \"integer\""},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_area_based_Rao.html","id":"compute-area-based-raos-index","dir":"Articles","previous_headings":"","what":"Compute Area based Rao’s Index","title":"Rasterdiv: Area-based Rao's index.","text":"","code":"RaoC <- paRao(x=copNDVIlr, area=world, field='CONTINENT', alpha=c(1,2)) #Plot classic area-based Rao's index plot(RaoC, col=hcl(RaoC$alpha.1*10), main=\"Classic Rao's index per continent alpha 1\") text(RaoC, label=paste(\"Rao'Q =\", round(RaoC$alpha.1,1)), col=\"black\", family=\"Arial\", halo=TRUE)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_area_based_Rao.html","id":"compute-multimension-area-based-raos-index","dir":"Articles","previous_headings":"","what":"Compute multimension area-based Rao’s Index","title":"Rasterdiv: Area-based Rao's index.","text":"","code":"# The second layers is NDVI/100 (just as an example) RaoMC <- paRao(x=stack(copNDVIlr,copNDVIlr/2), area=world, field='CONTINENT', alpha=5, method=\"multidimension\", simplify=1) #Plot area-based RAo's index plot(RaoMC, col=hcl(RaoMC$alpha.5*10000), main=\"Multidimension Rao's index per continent alpha 5\") text(RaoMC, label=paste(\"Rao'Q =\", round(RaoMC$alpha.5,3)), col=\"black\", family=\"Arial\", halo=TRUE)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_basics.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Rasterdiv: Derive indices of diversity from NDVI.","text":"RasterLayer called copNDVI loaded together package rasterdiv. copNDVI 8-bit raster, meaning pixel values range 0 255. stretch match familiar (-1,1) values range using raster::stretch(copNDVI,minv=-1,maxv=1) .","code":""},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_basics.html","id":"reclassify-ndvi","dir":"Articles","previous_headings":"","what":"Reclassify NDVI","title":"Rasterdiv: Derive indices of diversity from NDVI.","text":"Pixels values 253, 254 255 (water) set NA’s.","code":"copNDVI <- raster::reclassify(copNDVI, cbind(252,255, NA), right=TRUE)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_basics.html","id":"resample-ndvi-to-a-coarser-resolution","dir":"Articles","previous_headings":"","what":"Resample NDVI to a coarser resolution","title":"Rasterdiv: Derive indices of diversity from NDVI.","text":"speed calculation, RasterLayer “resampled” resolution 10 times coarser original cut Africa.","code":"#Resample using raster::aggregate and a linear factor of 10 copNDVIlr <- raster::aggregate(copNDVI, fact=10) #Set float numbers as integers to further speed up the calculation storage.mode(copNDVIlr[]) = \"integer\""},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_basics.html","id":"compare-ndvi-low-and-high-resolution","dir":"Articles","previous_headings":"","what":"Compare NDVI low and high resolution","title":"Rasterdiv: Derive indices of diversity from NDVI.","text":"","code":"levelplot(copNDVI,layout=c(0,1,1), main=\"NDVI 21st of June 1999-2017 - ~8km pixel resolution\") levelplot(copNDVIlr,layout=c(0,1,1), main=\"NDVI 21st of June 1999-2017 - ~150km pixel resolution\")"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_basics.html","id":"compute-all-indexes-in-rasterdiv","dir":"Articles","previous_headings":"","what":"Compute all indexes in rasterdiv","title":"Rasterdiv: Derive indices of diversity from NDVI.","text":"rasterdiv allows computation 8 diversity indexes based information theory. following section, indexes computed copNDVIlr using moving window 81 pixels (9 px side). Alpha values Hill, Rényi parametric Rao indexes set 0 2 every 0.5. addition, set na.tolerance=0.1, meaning moving windows 10% pixels equal NA set NA.","code":"#Shannon's Diversity sha <- Shannon(copNDVIcont,window=9,na.tolerance=0.1,np=1)  #Pielou's Evenness pie <- Pielou(copNDVIcont,window=9,na.tolerance=0.1,np=1)  #Berger-Parker's Index ber <- BergerParker(copNDVIcont,window=9,na.tolerance=0.1,np=1)  #Parametric Rao's quadratic entropy with alpha ranging from 1 to 5 prao <- paRao(copNDVIcont,window=9,alpha=1:5,na.tolerance=0.1,dist_m=\"euclidean\",np=1)  #Cumulative Residual Entropy cre <- CRE(copNDVIcont,window=9,na.tolerance=0.1,np=1)  #Hill's numbers hil <- Hill(copNDVIcont,window=9,alpha=seq(0,2,0.5),na.tolerance=0.1,np=1)  #Rényi's Index ren <- Renyi(copNDVIcont,window=9,alpha=seq(0,2,0.5),na.tolerance=0.1,np=1)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_basics.html","id":"visualise-rasterlayers","dir":"Articles","previous_headings":"","what":"Visualise RasterLayers","title":"Rasterdiv: Derive indices of diversity from NDVI.","text":"","code":"#Shannon's Diversity levelplot(sha,main=\"Shannon's entropy from Copernicus NDVI 5 km (9 px-side moving window)\",as.table = T,layout=c(0,1,1), ylim=c(-60,75), margin = list(draw = TRUE)) #Pielou's Evenness levelplot(pie,main=\"Pielou's evenness from Copernicus NDVI 5 km (9 px-side moving window)\",as.table = T,layout=c(0,1,1), ylim=c(-60,75), margin = list(draw = TRUE)) #Berger-Parker' Index levelplot(ber,main=\"Berger-Parker's index from Copernicus NDVI 5 km (9 px-side moving window)\",as.table = T,layout=c(0,1,1), ylim=c(-60,75), margin = list(draw = TRUE)) #Parametric Rao's quadratic Entropy levelplot(stack(prao[[1]]),main=\"Parametric Rao's quadratic entropy from Copernicus NDVI 5 km (9 px-side moving window)\",as.table = T,layout=c(0,5,1), ylim=c(-60,75), margin = list(draw = TRUE)) #Cumulative Residual Entropy levelplot(cre,main=\"Cumulative Residual Entropy from Copernicus NDVI 5 km (9 px-side moving window)\",as.table = T,layout=c(0,1,1), ylim=c(-60,75), margin = list(draw = TRUE)) #Hill's numbers (alpha=0, 0.5, 1, 1.5 and 2) levelplot(stack(hil),main=\"Hill's numbers from Copernicus NDVI 5 km (9 px-side moving window)\",as.table = T,layout=c(0,5,1), ylim=c(-60,75)) #Renyi' Index (alpha=0, 1, 1.5 and 2) levelplot(stack(ren),main=\"Renyi's entropy from Copernicus NDVI 5 km (9 px-side moving window)\",as.table = T,layout=c(0,5,1),names.attr=paste(\"alpha\",seq(0,2,0.5),sep=\" \"), ylim=c(-60,75), margin = list(draw = FALSE))"},{"path":"https://mattmar.github.io/rasterdiv/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matteo Marcantonio. Author, maintainer. Martina Iannacito. Author, contributor. Elisa Marchetto. Contributor. Elisa Thouverai. Author, contributor. Michele Torresani. Author, contributor. Daniele Da Re. Author. Clara Tattoni. Author. Giovanni Bacaro. Author. Saverio Vicario. Author, contributor. Carlo Ricotta. Author. Duccio Rocchini. Author, contributor.","code":""},{"path":"https://mattmar.github.io/rasterdiv/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marcantonio M, Iannacito M, Thouverai E, Torresani M, Da Re D, Tattoni C, Bacaro G, Vicario S, Ricotta C, Rocchini D (2022). rasterdiv: Diversity Indices Numerical Matrices. R package version 0.3, https://mattmar.github.io/rasterdiv/.","code":"@Manual{,   title = {rasterdiv: Diversity Indices for Numerical Matrices},   author = {Matteo Marcantonio and Martina Iannacito and Elisa Thouverai and Michele Torresani and Daniele {Da Re} and Clara Tattoni and Giovanni Bacaro and Saverio Vicario and Carlo Ricotta and Duccio Rocchini},   year = {2022},   note = {R package version 0.3},   url = {https://mattmar.github.io/rasterdiv/}, }"},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/index.html","id":"stable-versions-can-be-installed-from-the-cran","dir":"","previous_headings":"","what":"Stable versions can be installed from the CRAN:","title":"Diversity Indices for Numerical Matrices","text":"","code":"install.packages(\"rasterdiv\")"},{"path":"https://mattmar.github.io/rasterdiv/index.html","id":"development-versions-can-be-installed-with","dir":"","previous_headings":"","what":"Development versions can be installed with:","title":"Diversity Indices for Numerical Matrices","text":"","code":"library(devtools) install_github(\"mattmar/rasterdiv\")"},{"path":"https://mattmar.github.io/rasterdiv/index.html","id":"what-is-rasterdiv","dir":"","previous_headings":"","what":"What is rasterdiv?","title":"Diversity Indices for Numerical Matrices","text":"rasterdiv package R statistical software environment. aims provide functions apply Information Theory based diversity indexes RasterLayer numerical matrices, Shannon’s entropy Cumulative Residual Entropy (CRE).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":null,"dir":"Reference","previous_headings":"","what":"Berger-Parker's diversity index — BergerParker","title":"Berger-Parker's diversity index — BergerParker","text":"Computes Berger-Parker's diversity index different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Berger-Parker's diversity index — BergerParker","text":"","code":"BergerParker(x, window=3, rasterOut=TRUE, np=1,    na.tolerance=1.0, cluster.type=\"SOCK\", debugging=FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Berger-Parker's diversity index — BergerParker","text":"x input data may matrix, Spatial Grid Data Frame, RasterLayer list objects. latter case, first element list considered. window side square moving window, must odd numeric value greater 1 ensure target pixel centre moving window. Default value 3. rasterOut Boolean, TRUE output RasterLayer format x template. np number processes (cores) spawned. Default value 1. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Berger-Parker's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 1.0 (.e., tolerance NA's). cluster.type type cluster created. options \"MPI\" (calls \"makeMPIcluster\"), \"FORK\" \"SOCK\" (call \"makeCluster\"). Default type \"SOCK\". debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Berger-Parker's diversity index — BergerParker","text":"Berger-Parker's index relative abundance abundant category (.e., unique numerical values considered numerical matrix). Berger-Parker's index equals logarithm inverse Renyi's index order infinity, \\(log(1/{}^\\infty H)\\) inverse Hill's index order infinity, \\(1/{}^\\infty D\\).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Berger-Parker's diversity index — BergerParker","text":"numerical matrix dimension dim(x).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Berger-Parker's diversity index — BergerParker","text":"Berger, W.H., Parker, F.L. (1970). Diversity planktonic foraminifera deep-sea sediments\". Science, 168: 1345-1347.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Berger-Parker's diversity index — BergerParker","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Berger-Parker's diversity index — BergerParker","text":"Linux users need install libopenmpi MPI parallel computing. Linux Ubuntu users may try: apt-get update; apt-get upgrade; apt-get install mpi; apt-get install libopenmpi-dev; apt-get install r-cran-rmpi Microsoft Windows users may need additional work use \"MPI\", see: https://bioinfomagician.wordpress.com/2013/11/18/installing-rmpi-mpi--r--mac--windows/","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Berger-Parker's diversity index — BergerParker","text":"","code":"#Minimal example; compute Renyi's index with alpha 1:5  a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3) berpar <- BergerParker(x=a,window=3) #>  #> Object x check OK:  #> Berger-Parker output matrix will be returned. #> Progress:  50 on 100  Progress:  75 on 100  Progress: 100 on 100   #>  #> Calculation complete."},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerP.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallelised Berger-Parker's diversity index — BergerParkerP","title":"Parallelised Berger-Parker's diversity index — BergerParkerP","text":"Parallelised Berger-Parker's diversity index.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallelised Berger-Parker's diversity index — BergerParkerP","text":"","code":"BergerParkerP(rasterm, w, na.tolerance, debugging)"},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallelised Berger-Parker's diversity index — BergerParkerP","text":"rasterm input data. w half side square moving window. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallelised Berger-Parker's diversity index — BergerParkerP","text":"Matrix list matrixes Berger-Parker index computed moving window given size.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallelised Berger-Parker's diversity index — BergerParkerP","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Berger-Parker's diversity index — BergerParkerS","title":"Sequential Berger-Parker's diversity index — BergerParkerS","text":"Berger-Parker's diversity index.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Berger-Parker's diversity index — BergerParkerS","text":"","code":"BergerParkerS(rasterm, w, na.tolerance, debugging)"},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Berger-Parker's diversity index — BergerParkerS","text":"rasterm input data. w half side square moving window. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Berger-Parker's diversity index — BergerParkerS","text":"Matrix list matrixes Berger-Parker index computed moving window given size.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequential Berger-Parker's diversity index — BergerParkerS","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Residual Entropy (CRE) — CRE","title":"Cumulative Residual Entropy (CRE) — CRE","text":"Computes Cumulative Residual Entropy (CRE) different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Residual Entropy (CRE) — CRE","text":"","code":"CRE(x, window=3, mode=\"classic\", rasterOut=TRUE,   rescale=FALSE, na.tolerance=1.0, simplify=2, np=1,    cluster.type=\"SOCK\", debugging=FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Residual Entropy (CRE) — CRE","text":"x input data may matrix, Spatial Grid Data Frame, RasterLayer list objects. latter case, mode=\"classic\" first element list considered. window side square moving window, must odd numeric value greater 1 ensure target pixel centre moving window. Default value 3. mode currently, two modes calculate Cumulative Residual Entropy (CRE). mode \"classic\", monodimension CRE calculated one single matrix. mode \"multidimension\" (experimental!) list matrices must provided input. latter case, multidimensional cumulative residual probability calculated. Default value \"classic\". rasterOut Boolean, TRUE output RasterLayer format x template. rescale boolean variable set FALSE default. TRUE, x scaled centred standardise different matrices mode \"multidimension\". Default value FALSE. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate CRE moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise CRE calculated considering non-NA values. Default values 1.0 (.e., full tolerance NA's). simplify Number decimal places retained calculate CRE. x floats. np number processes (cores) spawned. Default value 1. cluster.type type cluster created. options \"MPI\" (calls \"makeMPIcluster\"), \"FORK\" \"SOCK\" (call \"makeCluster\"). Default type \"SOCK\". debugging boolean variable set FALSE default. TRUE, additional messages printed. debugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative Residual Entropy (CRE) — CRE","text":"Unidimension Cumulative Residual Entropy (\\(CRE\\)) calculated numerical vector  \\(CRE = CRE=-\\sum_{=1}^{N}{P(X\\geq x_i)\\log{P(X\\geq x_i)dx}}\\) [1]  \\( dx=(x_i -x_{-1})\\) P vector probabilities vector observations larger equal value vector. \"multidimension\" CRE, P becomes array many dimensions one observations. cell P probability estimates frequency number observation time satisfy larger equal requirement different combination values along dimension. dx becomes products difference along dimension. theoretical minimum CRE 0, values identical window. values CRE increases range observations, thus observations equally spread (even) across values higher CRE .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Residual Entropy (CRE) — CRE","text":"matrix dimension dim(x).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cumulative Residual Entropy (CRE) — CRE","text":"[1] Rao M, Chen Y, Vemuri BC, Wang F (2004) Cumulative Residual Entropy: New Measure Information. IEEE Trans Inf Theory 50:1220–1228.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cumulative Residual Entropy (CRE) — CRE","text":"Saverio Vicario saverio.vicario@cnr.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Residual Entropy (CRE) — CRE","text":"","code":"#Minimum example; compute CRE a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3) out <- CRE(x=a,window=3,na.tolerance=0,mode=\"classic\") #> Converting x data in an integer matrix... #> Matrix check OK:  #> Cumulative Residual Entropy output matrix will be returned #> Progress:  50 on 100  Progress:  50 on 100  Progress:  50 on 100  Progress:  75 on 100  Progress:  75 on 100  Progress:  75 on 100  Progress: 100 on 100  Progress: 100 on 100  Progress: 100 on 100   #>  #> Calculation of Cumulative Residual Entropy complete.  #Minimum example; compute CRE in paralllel a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3) out <- CRE(x=a,window=3,na.tolerance=0,mode=\"classic\",np=1) #> Converting x data in an integer matrix... #> Matrix check OK:  #> Cumulative Residual Entropy output matrix will be returned #> Progress:  50 on 100  Progress:  50 on 100  Progress:  50 on 100  Progress:  75 on 100  Progress:  75 on 100  Progress:  75 on 100  Progress: 100 on 100  Progress: 100 on 100  Progress: 100 on 100   #>  #> Calculation of Cumulative Residual Entropy complete.  #Compute multidimension Rao's index rescaling the input matrices a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3) b <- matrix(c(0.5,0.5,0.1,0.1,0.3,0.3,0.3,0.3,0.3),ncol=3,nrow=3) out <- CRE(x=list(a,b),window=3,na.tolerance=0,   mode=\"multidimension\",rescale=TRUE,debugging=TRUE) #> Matrix check OK:  #> A matrix with multimension Cumulative Residual Entropy will be returned #> #check: Into multidimensional clause. #> #check: After rescaling in multimensional clause. #> Progress: 2 on 4  Progress: 3 on 4  Progress: 4 on 4   #> #check: return function."},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":null,"dir":"Reference","previous_headings":"","what":"Hill's index of diversity - Hill numbers (D) — Hill","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"Computes Hill's index diversity (Hill numbers) different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"","code":"Hill(x, window = 3, alpha = 1, rasterOut=TRUE,    np = 1, na.tolerance=1.0, cluster.type = \"SOCK\",    debugging = FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"x input data may matrix, Spatial Grid Data Frame, RasterLayer list objects. latter case, first element list considered. window side square moving window, must odd numeric value greater 1 ensure target pixel centre moving window. Default value 3. alpha Order Hill number compute index. \"alpha\" vector length greater 1, index calculated x value sequence. rasterOut Boolean, TRUE output RasterLayer format x template. np number processes (cores) spawned. Default value 1. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Hill's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 1.0 (.e., tolerance NA's). cluster.type type cluster created. options \"MPI\" (calls \"makeMPIcluster\"), \"FORK\" \"SOCK\" (call \"makeCluster\"). Default type \"SOCK\". debugging boolean variable set FALSE default. TRUE, additional messages printed. debugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"Hill numbers (\\({}^qD\\)) calculated numerical matrices \\({}^qD = (\\sum_{=1}^{R} {p^q}_i)^{1/(1-q)}\\),q order Hill number, R total number categories (.e., unique numerical values numerical matrix), p relative abundance category. q=1, Shannon.R called calculate \\(exp(H^1)\\) instead indefinite \\({}^1D\\). \\(q > 2*10^9\\), BerkgerParker.R called calculate \\(1/{{}^\\infty D}\\). Hill numbers low order weight rare categories, whereas Hill numbers higher order weight dominant categories.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"list matrices dimension dim(x) length equal length alpha.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"Hill, M.O. (1973). Diversity evenness: unifying notation consequences. Ecology 54, 427-431.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"Linux users need install libopenmpi MPI parallel computing. Linux Ubuntu users may try: apt-get update; apt-get upgrade; apt-get install mpi; apt-get install libopenmpi-dev; apt-get install r-cran-rmpi Microsoft Windows users may need additional work use \"MPI\", see: https://bioinfomagician.wordpress.com/2013/11/18/installing-rmpi-mpi--r--mac--windows/","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"","code":"#Minimal example; compute Hill's index with alpha 1:5  a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3) hill <- Hill(x=a,window=3,alpha=1:5) #>  #> Object x check OK:  #> Hill with alpha parameter value in  1 2 3 4 5  will be returned. #>  #>  #> Processing alpha 1 #> Progress:  50 on 100  Progress:  75 on 100  Progress: 100 on 100   #>  #>  #> Processing alpha 2 #> Progress:  50 on 100  Progress:  75 on 100  Progress: 100 on 100   #>  #>  #> Processing alpha 3 #> Progress:  50 on 100  Progress:  75 on 100  Progress: 100 on 100   #>  #>  #> Processing alpha 4 #> Progress:  50 on 100  Progress:  75 on 100  Progress: 100 on 100   #>  #>  #> Processing alpha 5 #> Progress:  50 on 100  Progress:  75 on 100  Progress: 100 on 100   #>  #>  #> Calculation complete."},{"path":"https://mattmar.github.io/rasterdiv/reference/HillP.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallelised Hill's diversity index — HillP","title":"Parallelised Hill's diversity index — HillP","text":"Parallelised Hill's diversity index.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/HillP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallelised Hill's diversity index — HillP","text":"","code":"HillP(rasterm, w, alpha, na.tolerance, debugging)"},{"path":"https://mattmar.github.io/rasterdiv/reference/HillP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallelised Hill's diversity index — HillP","text":"rasterm input data. w half side square moving window. alpha alpha value order diversity Hill's Index. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/HillP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallelised Hill's diversity index — HillP","text":"Matrix list matrixes Hill index computed moving window given size.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/HillP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallelised Hill's diversity index — HillP","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/HillS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Hill's diversity index — HillS","title":"Sequential Hill's diversity index — HillS","text":"Hill's diversity index.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/HillS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Hill's diversity index — HillS","text":"","code":"HillS(rasterm, w, alpha, na.tolerance, debugging)"},{"path":"https://mattmar.github.io/rasterdiv/reference/HillS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Hill's diversity index — HillS","text":"rasterm input data. w half side square moving window. alpha alpha value order diversity Hill's Index. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Hill's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 1.0 (.e., tolerance NA's). debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/HillS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Hill's diversity index — HillS","text":"Matrix list matrixes Hill index computed moving window given size.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/HillS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequential Hill's diversity index — HillS","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":null,"dir":"Reference","previous_headings":"","what":"Pielou's evenness index (E') — Pielou","title":"Pielou's evenness index (E') — Pielou","text":"Computes Pielou's evenness index different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pielou's evenness index (E') — Pielou","text":"","code":"Pielou(x, window=3, rasterOut=TRUE, np=1, na.tolerance=1.0, cluster.type=\"SOCK\",  debugging=FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pielou's evenness index (E') — Pielou","text":"x input data may matrix, Spatial Grid Data Frame, RasterLayer list objects. latter case, first element list considered. window side square moving window, must odd numeric value greater 1 ensure target pixel centre moving window. Default value 3. rasterOut Boolean, TRUE output RasterLayer format x template. np type cluster created. options \"MPI\" (calls \"makeMPIcluster\"), \"FORK\" \"SOCK\" (call \"makeCluster\"). Default type \"SOCK\". na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Pielou's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 1.0 (.e., tolerance NA's). cluster.type type cluster created. options \"MPI\" (calls \"makeMPIcluster\"), \"FORK\" \"SOCK\" (call \"makeCluster\"). Default type \"SOCK\". debugging boolean variable set FALSE default. TRUE, additional messages printed. debugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pielou's evenness index (E') — Pielou","text":"Pielou evenness's index (\\(E'\\)) calculated numerical matrix \\(E' = {{\\sum_{=1}^{R} p_i \\times log(p_i)}\\{log(R)}}\\), R total number categories (.e., unique numerical values considered numerical matrix) p relative abundance category. Pielou's evenness represents ratio observed value Shannon's Index value Shannon's Index categories (R) relative abundance.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pielou's evenness index (E') — Pielou","text":"numerical matrix dimension dim(x).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pielou's evenness index (E') — Pielou","text":"Pielou, E.C. (1966). measurement diversity different types biological collections. Journal Theoretical Biology, 13: 131-144.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pielou's evenness index (E') — Pielou","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Pielou's evenness index (E') — Pielou","text":"Linux users need install libopenmpi MPI parallel computing. Linux Ubuntu users may try: apt-get update; apt-get upgrade; apt-get install mpi; apt-get install libopenmpi-dev; apt-get install r-cran-rmpi Microsoft Windows users may need additional work use \"MPI\", see: https://bioinfomagician.wordpress.com/2013/11/18/installing-rmpi-mpi--r--mac--windows/","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pielou's evenness index (E') — Pielou","text":"","code":"#Minimal example; compute Shannon's index   a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3) renyi <- Pielou(x=a,window=3) #>  #> Object x check OK:  #> Pielou output matrix will be returned. #> Progress:  50 on 100  Progress:  75 on 100  Progress: 100 on 100   #>  #> Calculation complete."},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouP.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallelised Pielou's diversity index — PielouP","title":"Parallelised Pielou's diversity index — PielouP","text":"Parallelised Pielou's diversity index.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallelised Pielou's diversity index — PielouP","text":"","code":"PielouP(rasterm, w, na.tolerance, debugging)"},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallelised Pielou's diversity index — PielouP","text":"rasterm input data. w half side square moving window. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallelised Pielou's diversity index — PielouP","text":"Matrix list matrixes Pielou index computed moving window given size.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallelised Pielou's diversity index — PielouP","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Pielou's diversity index — PielouS","title":"Sequential Pielou's diversity index — PielouS","text":"Pielou's diversity index.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Pielou's diversity index — PielouS","text":"","code":"PielouS(rasterm, w, na.tolerance, debugging)"},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Pielou's diversity index — PielouS","text":"rasterm input data. w half side square moving window. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Pielou's diversity index — PielouS","text":"Matrix list matrixes Pielou index computed moving window given size.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequential Pielou's diversity index — PielouS","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":null,"dir":"Reference","previous_headings":"","what":"Rao's index of quadratic entropy (Q) — Rao","title":"Rao's index of quadratic entropy (Q) — Rao","text":"Deprecated, use paRao(..., alpha=1). Computes Rao's index quadratic entropy (Q) different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rao's index of quadratic entropy (Q) — Rao","text":"","code":"Rao(x, dist_m=\"euclidean\", window=9, rasterOut = TRUE,  mode=\"classic\",lambda=0, shannon=FALSE, rescale=FALSE,  na.tolerance=1.0, simplify=2, np=1, cluster.type=\"SOCK\",   debugging=FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rao's index of quadratic entropy (Q) — Rao","text":"x input data may matrix, Spatial Grid Data Frame, RasterLayer list objects. latter case, mode=\"classic\" first element list considered. dist_m define type distance calculated numerical categories. dist_m can character string defines name distance derive \"euclidean\". distance names allowed proxy::dist. Alternatively, dist_m can function calculates user defined distance, (.e., function(x,y) {return(cos(y-x)-sin(y-x))}) matrix distances. mode=\"multidimension\" \"euclidean\", \"manhattan\", \"canberra\", \"minkowski\" \"mahalanobis\" can used. Default value \"euclidean\". window side square moving window, must odd numeric value greater 1 ensure target pixel centre moving window. Default value 3. proxy::dist matrix function assume distance matrix, therefore distance derived. rasterOut Boolean, TRUE output RasterLayer format x template. mode currently, two modes calculate Rao's index. mode \"classic\", classic Rao's index calculated one single matrix. mode \"multidimension\" (experimental!) list matrices must provided input. latter case, overall distance matrix calculated multi- hyper-dimensional system using measure defined function argument dist_m. pairwise distance multiplied inverse squared number pixels considered moving window, Rao's Q finally derived applying summation. Default value \"classic\". lambda value lambda Minkowski's distance. Considered dist_m = \"minkowski\" mode=\"multidimension\". Default value 0. shannon boolean variable set FALSE default. TRUE, matrix Shannon index also calculated.  Default value FALSE. rescale boolean variable set FALSE default. TRUE, x scaled centred standardise different matrices mode \"multidimension\". Default value FALSE. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 1.0 (.e., full tolerance NA's). simplify Number decimal places retained calculate distances Rao's index. x floats. np number processes (cores) spawned. Default value 1. cluster.type type cluster created. options \"MPI\" (calls \"makeMPIcluster\"), \"FORK\" \"SOCK\" (call \"makeCluster\"). Default type \"SOCK\". debugging boolean variable set FALSE default. TRUE, additional messages printed. debugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rao's index of quadratic entropy (Q) — Rao","text":"Classical Rao's Index (\\(Q\\)) calculated numerical matrix \\(Q = \\sum_{=1}^{R}{\\sum_{j=1}^{R}{d_{,j}\\times{p_i}\\times{p_j}}}\\) [1]. R number categories, whereas j pair numerical categories moving window. \"multidimension\" Rao's index, distances among categories calculated considering one layer, pairwise distance pair numerical categories multiplied square size moving window (somewhat calculate variance multidimensional distance [2].).   theoretical minimum Rao's Q 0, categories window distance 0. distance chosen calculate Rao's Index ranges 0 1, maximum value Rao's Index equals Simpson Index Diversity \\(1-1/S_i\\) S number categories window .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rao's index of quadratic entropy (Q) — Rao","text":"shannon=TRUE, list matrices length two, otherwise matrix dimension dim(x).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rao's index of quadratic entropy (Q) — Rao","text":"[1] Rao, C.R. (1982). Diversity dissimilarity coefficients: unified approach. Theoretical Population Biology, 21: 2443.  [2] Rocchini, D., M. Marcantonio, C. Ricotta (2017). Measuring Rao’s Q diversity index remote sensing: open source solution. Ecological Indicators. 72: 234–238.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rao's index of quadratic entropy (Q) — Rao","text":"Matteo Marcantonio marcantoniomatteo@gmail.com  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rao's index of quadratic entropy (Q) — Rao","text":"","code":"# Minimal example; compute Rao's index   if (FALSE) {   a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3)   out <- Rao(x=a,window=3,dist_m=\"euclidean\",na.tolerance=1.0,shannon=FALSE,mode=\"classic\")  # Compute both Rao and Shannon index    out <- Rao(x=a,window=3,dist_m=\"euclidean\",na.tolerance=1.0,shannon=TRUE,mode=\"classic\")  # Compute both Rao and Shannon index multiple windows   out <- Rao(x=a,window=c(3,5),dist_m=\"euclidean\",na.tolerance=1.0,shannon=TRUE,mode=\"classic\")  # Compute multidimension Rao's index rescaling the input matrices   a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3)   b <- matrix(c(0.5,0.5,0.1,0.1,0.3,0.3,0.3,0.3,0.3),ncol=3,nrow=3)   out <- Rao(x=list(a,b),window=3,dist_m=\"euclidean\",na.tolerance=1.0,     mode=\"multidimension\",rescale=TRUE,debugging=TRUE) }"},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":null,"dir":"Reference","previous_headings":"","what":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"RaoAUC computes accumulation function (integral area curve) parametric version Rao's index quadratic entropy (Q) different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"","code":"RaoAUC(alphas=1:5, x, dist_m=\"euclidean\", window=9,   method=\"classic\", rasterAUC=TRUE, lambda=0,   na.tolerance=1.0, rescale=FALSE, diag=TRUE,    simplify=2, np=1, cluster.type=\"SOCK\", debugging=FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"alphas continuous vector alphas form start:end integrated parametric Rao's index.  Default value 1:5. x input data may matrix, Spatial Grid Data Frame, RasterLayer list objects. latter case, method=\"classic\" first element list considered. dist_m define type distance calculated numerical categories. dist_m can character string defines name distance derive \"euclidean\". distance names allowed proxy::dist. Alternatively, dist_m can function calculates user defined distance, (.e., function(x,y) {return(cos(y-x)-sin(y-x))}) matrix distances. method=\"multidimension\" \"euclidean\", \"manhattan\", \"canberra\", \"minkowski\" \"mahalanobis\" can used. Default value \"euclidean\". window side square moving window, must odd numeric value greater 1 ensure target pixel centre moving window. Default value 3. proxy::dist matrix function assume distance matrix, therefore distance derived. method Currently, two ways calculate parametric version Rao's index. method=\"classic\", normal parametric Rao's index calculated single matrix. method=\"multidimension\" (experimental!) list matrices must provided input. latter case, overall distance matrix calculated multi- hyper-dimensional system using distance measure defined function argument dist_m. pairwise distance multiplied inverse squared number pixels considered moving window, Rao's Q finally derived applying summation. Default value \"classic\" rasterAUC Boolean, TRUE output RasterLayer object x raster template. lambda value lambda Minkowski's distance. Considered dist_m = \"minkowski\" method=\"multidimension\". Default value 0. na.tolerance Numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate parametric Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 1.0 (.e., tolerance NA's). Default value 1.0. rescale Boolean. Considered method=\"multidimension\". TRUE, element x rescaled centred. diag Boolean. TRUE diagonal distance matrix filled 0's, otherwise NA's. diag=TRUE alpha=0, output matrix inexorably composed 0's. simplify Number decimal places retained calculate distances Rao's index. x floats. np number processes (cores) spawned. Default value 2. cluster.type type cluster created. options \"MPI\" (calls \"makeMPIcluster\"), \"FORK\" \"SOCK\" (call \"makeCluster\"). Default type \"SOCK\". debugging boolean variable set FALSE default. TRUE, additional messages printed. debugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"accumulation function parametric Rao's Index (\\(Q\\)) calculated integrating numerically range alphas. *RaoAUC* therefore equal \\((\\int_{}^{b} {1\\{N^4}}\\cdot{d_{,j}^{\\alpha}})^{1\\{\\alpha}} dx\\). N number pixels  moving window, alpha weight assigned distances.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"matrix dimension dim(x). rasterAUC=TRUE, output RasterLayer x template.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"[1] Rocchini, D., M. Marcantonio, C. Ricotta (2017). Measuring Rao’s Q diversity index remote sensing: open source solution. Ecological Indicators. 72: 234–238.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"Matteo Marcantonio marcantoniomatteo@gmail.com","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"","code":"#Minimal example; RaoAUC with alphas ranging from 1 to 10   a <- matrix(c(10,10,10,20,20,20,20,30,30), ncol=3, nrow=3)   out <- RaoAUC(alphas=1:10, x=a, window=3, dist_m=\"euclidean\", na.tolerance=1, rasterAUC=TRUE) #> Warning: simplify=2. You're rounding data to 2 decimal place. #> Numerical matrix ready:  #> Parametric Rao output will be returned #>  #>  #> Processing alpha: 1 Moving Window: 3 #>  #>  #> Processing alpha: 2 Moving Window: 3 #>  #>  #> Processing alpha: 3 Moving Window: 3 #>  #>  #> Processing alpha: 4 Moving Window: 3 #>  #>  #> Processing alpha: 5 Moving Window: 3 #>  #>  #> Processing alpha: 6 Moving Window: 3 #>  #>  #> Processing alpha: 7 Moving Window: 3 #>  #>  #> Processing alpha: 8 Moving Window: 3 #>  #>  #> Processing alpha: 9 Moving Window: 3 #>  #>  #> Processing alpha: 10 Moving Window: 3 #>  #> Integrating numerically Rao values over alphas..."},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":null,"dir":"Reference","previous_headings":"","what":"Renyi's entropy (\\(H\\)) — Renyi","title":"Renyi's entropy (\\(H\\)) — Renyi","text":"Computes Renyi's entropy (\\({}^qH\\)) different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renyi's entropy (\\(H\\)) — Renyi","text":"","code":"Renyi(x, window=3, alpha=1, base=exp(1), rasterOut=TRUE,  np=1.0, na.tolerance=, cluster.type=\"SOCK\", debugging=FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renyi's entropy (\\(H\\)) — Renyi","text":"x input data may matrix, Spatial Grid Data Frame, RasterLayer list objects. latter case, first element list considered. window side square moving window, must odd numeric value greater 1 ensure target pixel centre moving window. Default value 3. alpha Order diversity compute index. alpha vector length greater 1, index calculated x value sequence. base numerical value defines base logarithm Renyi's entropy formula. Default value exp(1). rasterOut Boolean, TRUE output RasterLayer format x template. np number processes (cores) spawned. Default value 1. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Renyi's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 1.0 (.e., tolerance NA's). cluster.type type cluster created. options \"MPI\" (calls \"makeMPIcluster\"), \"FORK\" \"SOCK\" (call \"makeCluster\"). Default type \"SOCK\". debugging boolean variable set FALSE default. TRUE, additional messages printed. debugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Renyi's entropy (\\(H\\)) — Renyi","text":"Renyi's entropy (\\({}^qH\\)) calculated numerical matrix \\({}^qH = {1\\(1-q)} \\ln(\\sum_{=1}^{R} {p^q}_i)\\), q considered order diversity (alpha), R total number categories (.e., unique numerical values considered numerical matrix) p relative abundance category. q=1, Shannon.R called calculate \\(H'\\) instead indefinite \\({}^1D\\), \\(p > 2*10^9\\), BerkgerParker.R called calculate \\(log(1/{}^\\infty H)\\). Renyi's entropy low order weight rare numerical categories, whereas values higher order weight dominant categories.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Renyi's entropy (\\(H\\)) — Renyi","text":"list matrices length equal length \"alpha\". length \"alpha\" 1, matrix dimension dim(x).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Renyi's entropy (\\(H\\)) — Renyi","text":"Rényi, ., 1970. Probability Theory. North Holland Publishing Company, Amsterdam.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Renyi's entropy (\\(H\\)) — Renyi","text":"Matteo Marcantonio marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Renyi's entropy (\\(H\\)) — Renyi","text":"Linux users need install libopenmpi MPI parallel computing. Linux Ubuntu users may try: apt-get update; apt-get upgrade; apt-get install mpi; apt-get install libopenmpi-dev; apt-get install r-cran-rmpi Microsoft Windows users may need additional work use \"MPI\", see: https://bioinfomagician.wordpress.com/2013/11/18/installing-rmpi-mpi--r--mac--windows/","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Renyi's entropy (\\(H\\)) — Renyi","text":"","code":"#Minimal example; compute Renyi's index with alpha 1:5  a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3) renyi <- Renyi(x=a,window=3,alpha=1:5) #>  #> Object x check OK:  #> Renyi with alpha parameter value in  1 2 3 4 5  will be returned. #>  #> Processing alpha 1 #> Progress:  50 on 100  Progress:  75 on 100  Progress: 100 on 100   #>  #> Processing alpha 2 #>  #>  #> Processing alpha 2 Window 3 #>  #> Processing alpha 3 #>  #>  #> Processing alpha 3 Window 3 #>  #> Processing alpha 4 #>  #>  #> Processing alpha 4 Window 3 #>  #> Processing alpha 5 #>  #>  #> Processing alpha 5 Window 3 #>  #> Calculation complete."},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiP.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallelised Renyi's diversity index — RenyiP","title":"Parallelised Renyi's diversity index — RenyiP","text":"Parallelised Renyi's diversity index.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallelised Renyi's diversity index — RenyiP","text":"","code":"RenyiP(rasterm, w, alpha, base, na.tolerance, debugging)"},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallelised Renyi's diversity index — RenyiP","text":"rasterm input data. w half side square moving window. alpha alpha value order diversity Renyi's Index. base base logarithm calculate index. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallelised Renyi's diversity index — RenyiP","text":"Matrix list matrixes Renyi index computed moving window given size.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallelised Renyi's diversity index — RenyiP","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Renyi's diversity index — RenyiS","title":"Sequential Renyi's diversity index — RenyiS","text":"Sequential Renyi's diversity index.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Renyi's diversity index — RenyiS","text":"","code":"RenyiS(rasterm, w, alpha, base, na.tolerance, debugging)"},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Renyi's diversity index — RenyiS","text":"rasterm input data. w half side square moving window. alpha alpha value order diversity Renyi's Index. base base logarithm calculate index. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Renyi's diversity index — RenyiS","text":"Matrix list matrixes Renyi index computed moving window given size.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequential Renyi's diversity index — RenyiS","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":null,"dir":"Reference","previous_headings":"","what":"Shannon's diversity index (H') — Shannon","title":"Shannon's diversity index (H') — Shannon","text":"Computes Shannon's diversity index (H') different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shannon's diversity index (H') — Shannon","text":"","code":"Shannon(x, window=3, rasterOut=TRUE, np=1, na.tolerance=1.0,    cluster.type=\"SOCK\", debugging=FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shannon's diversity index (H') — Shannon","text":"x input data may matrix, Spatial Grid Data Frame, RasterLayer list objects. latter case, first element list considered. window side square moving window, must odd numeric value greater 1 ensure target pixel centre moving window. Default value 3. rasterOut Boolean, TRUE output RasterLayer format x template. np number processes (cores) spawned. Default value 1. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Shannon's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 1.0 (.e., tolerance NA's). cluster.type type cluster created. options \"MPI\" (calls \"makeMPIcluster\"), \"FORK\" \"SOCK\" (call \"makeCluster\"). Default type \"SOCK\". debugging boolean variable set FALSE default. TRUE, additional messages printed. debugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shannon's diversity index (H') — Shannon","text":"Shannon's index (\\(H'\\)) calculated numerical matrix \\(H' = {\\sum_{=1}^{R} p_i \\times log(p_i)}\\), R total number categories (.e., unique numerical values considered numerical matrix) p relative abundance category.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shannon's diversity index (H') — Shannon","text":"numerical matrix dimension {dim(x)}.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Shannon's diversity index (H') — Shannon","text":"Shannon, C.E. (1948). mathematical theory communication. Bell System Technical Journal, 27: 379-423, 623-656.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shannon's diversity index (H') — Shannon","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Shannon's diversity index (H') — Shannon","text":"Linux users need install libopenmpi MPI parallel computing. Linux Ubuntu users may try: apt-get update; apt-get upgrade; apt-get install mpi; apt-get install libopenmpi-dev; apt-get install r-cran-rmpi Microsoft Windows users may need additional work use \"MPI\", see: https://bioinfomagician.wordpress.com/2013/11/18/installing-rmpi-mpi--r--mac--windows/","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shannon's diversity index (H') — Shannon","text":"","code":"#Minimal example; compute Shannon's index   a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3) shannon <- Shannon(x=a,window=3) #>  #> Object x check OK:  #> Shannon output matrix will be returned. #> Progress:  50 on 100  Progress:  75 on 100  Progress: 100 on 100   #>  #> Calculation complete."},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonP.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallelised Shannon's diversity index — ShannonP","title":"Parallelised Shannon's diversity index — ShannonP","text":"Parallelised Shannon's diversity index.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallelised Shannon's diversity index — ShannonP","text":"","code":"ShannonP(rasterm, w, na.tolerance, debugging)"},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallelised Shannon's diversity index — ShannonP","text":"rasterm input data. w half side square moving window. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallelised Shannon's diversity index — ShannonP","text":"Matrix list matrixes Shannon index computed moving window given size.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallelised Shannon's diversity index — ShannonP","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Shannon's diversity index — ShannonS","title":"Sequential Shannon's diversity index — ShannonS","text":"Sequential Shannon's diversity index.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Shannon's diversity index — ShannonS","text":"","code":"ShannonS(rasterm, w, na.tolerance, debugging)"},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Shannon's diversity index — ShannonS","text":"rasterm input data. w half side square moving window. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Shannon's diversity index — ShannonS","text":"Matrix list matrixes Shannon index computed moving window given size.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequential Shannon's diversity index — ShannonS","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Martina Iannacito martina.iannacito@inria.fr  Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/copNDVI.html","id":null,"dir":"Reference","previous_headings":"","what":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","title":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","text":"RasterLayer (EPSG: 4326) global average NDVI value per pixel 21st June period 1999-2017.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/copNDVI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","text":"","code":"copNDVI"},{"path":"https://mattmar.github.io/rasterdiv/reference/copNDVI.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","text":"RasterLayer: NDVI Normalised Difference Vegetation Index value (0-255) 5 km pixel.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/copNDVI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","text":"https://land.copernicus.eu/global/products/ndvi","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoAreaS.html","id":null,"dir":"Reference","previous_headings":"","what":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoAreaS","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoAreaS","text":"Area-Based Sequential Parametric Rao's index quadratic entropy (Q)","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoAreaS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoAreaS","text":"","code":"mpaRaoAreaS(rasterm, area, alpha, simplify, dist_m, rescale, lambda, window)"},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoAreaS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoAreaS","text":"rasterm input raster data. area input vector data. alpha alpha value order diversity Hill's Index. simplify Rounding parameter. dist_m Type distance used. rescale Scale centre values element x. lambda Lambda value Minkowski distance. window moving window.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoAreaS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoAreaS","text":"vector input Rao's index pasted additional columns.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoAreaS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoAreaS","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Duccio Rocchini duccio.rocchini@unibo. Michele Torresani michele.torresani@unibo.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoP.html","id":null,"dir":"Reference","previous_headings":"","what":"Multidimensional parallel Parametric Rao's index of quadratic entropy (Q) — mpaRaoP","title":"Multidimensional parallel Parametric Rao's index of quadratic entropy (Q) — mpaRaoP","text":"Multidimensional parametric Rao's index quadratic entropy (Q).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multidimensional parallel Parametric Rao's index of quadratic entropy (Q) — mpaRaoP","text":"","code":"mpaRaoP(x,alpha,w,dist_m,na.tolerance,rescale,lambda,diag,debugging,isfloat,mfactor,np)"},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multidimensional parallel Parametric Rao's index of quadratic entropy (Q) — mpaRaoP","text":"x input list. alpha alpha value order diversity Hill's Index. w half side square moving window. dist_m Type distance used. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). rescale Scale centre values element x. lambda Lambda value Minkowski distance. diag Boolean. Diagonal distance matrix. debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging . isfloat input data floats? mfactor Multiplication factor case input data float numbers. np number processes (cores) spawned.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multidimensional parallel Parametric Rao's index of quadratic entropy (Q) — mpaRaoP","text":"list matrices dimension dim(x) length equal length alpha.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multidimensional parallel Parametric Rao's index of quadratic entropy (Q) — mpaRaoP","text":"Duccio Rocchini duccio.rocchini@unibo. Marcantonio Matteo marcantoniomatteo@gmail.com","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoS.html","id":null,"dir":"Reference","previous_headings":"","what":"Multidimensional sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoS","title":"Multidimensional sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoS","text":"Multidimensional parametric Rao's index quadratic entropy (Q).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multidimensional sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoS","text":"","code":"mpaRaoS(x,alpha,w,dist_m,na.tolerance,rescale,lambda,diag,debugging,isfloat,mfactor)"},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multidimensional sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoS","text":"rasterm input RasterStack. alpha alpha value order diversity Hill's Index. w half side square moving window. dist_m Type distance used. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). rescale Scale centre values element x. lambda Lambda value Minkowski distance. diag Boolean. Diagonal distance matrix. debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging . isfloat input data floats? mfactor Multiplication factor case input data float numbers.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multidimensional sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoS","text":"list matrices dimension dim(x) length equal length alpha.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multidimensional sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoS","text":"Duccio Rocchini duccio.rocchini@unibo. Marcantonio Matteo marcantoniomatteo@gmail.com","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric Rao's index of quadratic entropy (Q) — paRao","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"computes parametric version Rao's index quadratic entropy (Q) different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"","code":"paRao(x, area=NULL, field=NULL, dist_m=\"euclidean\",  window=9, alpha=1, method=\"classic\", rasterOut=TRUE, lambda=0,   na.tolerance=1.0, rescale=FALSE, diag=TRUE,    simplify=1, np=1,cluster.type=\"SOCK\", debugging=FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"x input data may matrix, Spatial Grid Data Frame, RasterLayer list objects. area input vector area layer area-based calculation. field column name vector area layer use calculate index. dist_m define type distance calculated numerical categories. dist_m can character string defines name distance derive \"euclidean\". distance names allowed proxy::dist. Alternatively, dist_m can function calculates user defined distance, (.e., function(x,y) {return(cos(y-x)-sin(y-x))}) matrix distances. method=\"multidimension\" \"euclidean\", \"manhattan\", \"canberra\", \"minkowski\" \"mahalanobis\" can used. Default value \"euclidean\". dist_m matrix function assume matrix contains distances. window side square moving window, must vector odd numeric values greater 1 ensure target pixel centre moving window. Default value 3. window can vector length greater 1, case Rao's index calculated x value vector. alpha weight distance matrix. alpha = 0, distances averaged geometric average, alpha=1 arithmetic mean, alpha = 2 quadratic mean, alpha = 3 cubic mean . alpha tends infinite (.e., higher maximum integer allowed R) alpha=Inf, maximum distance taken. \"alpha\" can vector length greater 1, case Rao's index calculated x value vector. method Currently two ways calculate parametric version Rao's index. method=\"classic\", normal parametric Rao's index calculated single matrix. method=\"multidimension\" (experimental!) list matrices must provided input. latter case, overall distance matrix calculated multi- hyper-dimensional system using distance measure defined function argument dist_m. pairwise distance multiplied inverse squared number pixels considered moving window, Rao's Q finally derived applying summation. Default value \"classic\" . rasterOut Boolean, TRUE output RasterLayer object x template. lambda value lambda Minkowski's distance. Considered dist_m = \"minkowski\" method=\"multidimension\". Default value 0. na.tolerance Numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default value 1.0. rescale Boolean. Considered method=\"multidimension\". TRUE, element x rescaled centred. diag Boolean. TRUE diagonal distance matrix filled 0's, otherwise NA's. diag=TRUE alpha=0, output matrix inexorably 0's. simplify Number decimal places retained calculate distances Rao's index. np number processes (cores) spawned. Default value 2. cluster.type type cluster created. options \"MPI\" (calls \"makeMPIcluster\"), \"FORK\" \"SOCK\" (call \"makeCluster\"). Default type \"SOCK\". debugging boolean variable set FALSE default. TRUE, additional messages printed. debugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"parametric Rao's Index (\\(Q\\)) extension Rao's Index considers generalised mean distances. generalised formula parametric Rao's index \\(Q_a = (\\sum_{,j=1}^{N}{1/N^2}\\times{d^{\\alpha}_{j,j}})^{1/{\\alpha}}\\). N number numerical categories, j pair numerical categories moving window alpha weight given distances. \"multidimension\" Rao's index, first distances among categories calculated considering one layer, pairwise distance pair numerical categories multiplied square size moving window (somewhat calculate variance multidimensional distance [1].).   theoretical minimum Rao's Q 0, categories window distance 0. distance chosen calculate Rao's Index ranges 0 1, maximum value Rao's Index equals Simpson Index Diversity \\(1-1/S_i\\) S number categories window (given alpha=1).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"list matrices dimension dim(x) length equal length alpha. rasterOut=TRUE x RasterLayer, output list RasterLayer objects.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"[1] Rocchini, D., M. Marcantonio, C. Ricotta (2017). Measuring Rao’s Q diversity index remote sensing: open source solution. Ecological Indicators. 72: 234–238.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"Matteo Marcantonio marcantoniomatteo@gmail.com   Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"","code":"# Minimal example; compute classic Rao's index   a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3)   out <- paRao(x=a,window=3,dist_m=\"euclidean\",na.tolerance=1,alpha=1) #> Warning: simplify=1. You're rounding data to 1 decimal place. #> Numerical matrix ready:  #> Parametric Rao output will be returned #>  #>  #> Processing alpha: 1 Moving Window: 3    # Compute classic Rao's index for two moving window sizes   a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3)   out <- paRao(x=a,window=c(3,5),dist_m=\"euclidean\",na.tolerance=1,alpha=1) #> Warning: simplify=1. You're rounding data to 1 decimal place. #> Numerical matrix ready:  #> Parametric Rao output will be returned #>  #>  #> Processing alpha: 1 Moving Window: 3 #>  #>  #> Processing alpha: 1 Moving Window: 5    # Compute Rao's index with a vector of alpha values for two moving windows   out <- paRao(x=a,window=3,dist_m=\"euclidean\",na.tolerance=1,alpha=1:5) #> Warning: simplify=1. You're rounding data to 1 decimal place. #> Numerical matrix ready:  #> Parametric Rao output will be returned #>  #>  #> Processing alpha: 1 Moving Window: 3 #>  #>  #> Processing alpha: 2 Moving Window: 3 #>  #>  #> Processing alpha: 3 Moving Window: 3 #>  #>  #> Processing alpha: 4 Moving Window: 3 #>  #>  #> Processing alpha: 5 Moving Window: 3    # Compute multidimensional Rao's index with alpha = 1    a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3)   b <- matrix(c(100,100,100,200,200,200,200,300,300),ncol=3,nrow=3)    out <- paRao(x=list(a,b),window=3,dist_m=\"euclidean\",     na.tolerance=1,alpha=1,method=\"multidimension\") #> Warning: simplify=1. You're rounding data to 1 decimal place. #> Warning: Multidimension Rao's index is experimental. Use with caution! #> Numerical matrix ready:  #> Parametric Rao output will be returned #>  #>  #> Processing alpha: 1 Moving Window: 3"},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoAreaS.html","id":null,"dir":"Reference","previous_headings":"","what":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoAreaS","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoAreaS","text":"Area-Based Sequential Parametric Rao's index quadratic entropy (Q)","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoAreaS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoAreaS","text":"","code":"paRaoAreaS(rasterm, area, alpha, simplify)"},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoAreaS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoAreaS","text":"rasterm input raster data. area input vector data. alpha alpha value order diversity Hill's Index. simplify Rounding parameter.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoAreaS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoAreaS","text":"vector input Rao's index pasted additional columns.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoAreaS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoAreaS","text":"Marcantonio Matteo marcantoniomatteo@gmail.com  Duccio Rocchini duccio.rocchini@unibo. Michele Torresani michele.torresani@unibo.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoP.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallelized Parametric Rao's index of quadratic entropy (Q) — paRaoP","title":"Parallelized Parametric Rao's index of quadratic entropy (Q) — paRaoP","text":"Parametric Rao's index quadratic entropy (Q).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallelized Parametric Rao's index of quadratic entropy (Q) — paRaoP","text":"","code":"paRaoS(rasterm,alpha,w,dist_m,na.tolerance,   diag,debugging,isfloat,mfactor)"},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallelized Parametric Rao's index of quadratic entropy (Q) — paRaoP","text":"rasterm input data. alpha alpha value order diversity Hill's Index. w half side square moving window. dist_m Type distance used. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). diag Boolean. Diagonal distance matrix. debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging . isfloat input data floats? debugging Debugging mode, TRUE FALSE.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallelized Parametric Rao's index of quadratic entropy (Q) — paRaoP","text":"list matrices dimension dim(x) length equal length alpha.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallelized Parametric Rao's index of quadratic entropy (Q) — paRaoP","text":"Duccio Rocchini duccio.rocchini@unibo. Marcantonio Matteo marcantoniomatteo@gmail.com","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoS","title":"Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoS","text":"Parametric Rao's index quadratic entropy (Q).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoS","text":"","code":"paRaoS(rasterm,alpha,w,dist_m,   na.tolerance,diag,debugging,   isfloat,mfactor)"},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoS","text":"rasterm input data. alpha alpha value order diversity Hill's Index. w half side square moving window. dist_m Type distance used. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). diag Boolean. Diagonal distance matrix. debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging . isfloat input data floats? debugging Debugging mode, TRUE FALSE.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoS","text":"list matrices dimension dim(x) length equal length alpha.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoS","text":"Duccio Rocchini duccio.rocchini@unibo. Marcantonio Matteo marcantoniomatteo@gmail.com","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/world.html","id":null,"dir":"Reference","previous_headings":"","what":"Natural Earth world dataset — world","title":"Natural Earth world dataset — world","text":"SpatialPolygonsDataFrame (EPSG: 4326) continents.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Natural Earth world dataset — world","text":"","code":"copNDVI"},{"path":"https://mattmar.github.io/rasterdiv/reference/world.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Natural Earth world dataset — world","text":"SpatialPolygonsDataFrame: world SpatialPolygonsDataFrame world dissolved continents.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/world.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Natural Earth world dataset — world","text":"https://www.naturalearthdata.com/","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-3","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.3","text":"Adding classic multimension area-based Rao’s index paRao(). ## Minor changes Reorganisation vignettes. New GitHub site pkgdown().","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-2-5-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.2.5.2","text":"Adding testthat tests area-based Rao.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-2-5-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.2.5.1","text":"Made area-based paRao efficient. Adapted vignettes changed.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-2-5","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.2.5","text":"Starting implement area-based paRao.","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-2-5","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.2.5","text":"Vignettes reduced Added world vector dataset","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-2-4","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.2.4","text":"accRao now RaoAUC RaoAUC working paRao multidimensional mode.","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-2-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.2.4","text":"Fixed inconsistencies manual.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.2.2p1","text":"Fixed issue due high alphas caused parametric Rao’s go infinite (just added warning multidimensional version). Rao still deprecated connected background paRao(…, alpha=1) continuity older versions.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-2-2-1","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.2.2","text":"Rao() now deprecated, replaced paRao(…, alpha=1). Multiple window sizes can now indicated paRao(…, window=c(3,5)). Multidimension paRao now working np>1.","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.2.2","text":"Vignette multidimension Rao (rasterdiv_advanced_multimensionRao). Added tests folder testthat.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.2.1","text":"new function accRao derive accumulation function parametric Rao’s index range alphas. vignette (rasterdiv_advanced_accRao) show apply function added package.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.2.0","text":"New parametrization Rao’s quadratic entropy. parametrisation reconciles abundance-based indexes distance-based indexes (Rao). new function called paRao, stands parametric Rao’s entropy.","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.2.0","text":"Minor improvements structure main functions. Option save output rasterstack main functions. pbapply pbmcapply progress bars. Main vignette (rasterdiv_basics) simplified.","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"rasterdiv-010","dir":"Changelog","previous_headings":"","what":"rasterdiv 0.1.0","title":"rasterdiv 0.1.0","text":"First release includes functions compute numerical matrices following indexes: * Shannon–Wiener index diversity * Rényi entropy * Simpson index * Berger-Parker index * Hill numbers order q effective number species * Pielou evenness * Rao’s quadratic entropy * Cumulative Residual entropy","code":""}]
