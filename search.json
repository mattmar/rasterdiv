[{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_01_Basics.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Indices of diversity from NDVI.","text":"SpatRaster called copNDVI loaded together package rasterdiv. copNDVI 8-bit raster, meaning pixel values range 0 255. stretch match familiar (-1,1) values range using terra::stretch(copNDVI,minv=-1,maxv=1). original dataset resampled 1/20th spatial resolution pixels values 253, 254 255 (water) set NA’s.","code":"#Resample using terra::aggregate and a linear factor of 10 copNDVI <- terra::aggregate(copNDVI, fact=20)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_01_Basics.html","id":"compute-all-indexes-in-rasterdiv-on-copndvi","dir":"Articles","previous_headings":"","what":"Compute all indexes in rasterdiv on copNDVI","title":"Indices of diversity from NDVI.","text":"rasterdiv allows computation 8 diversity indexes based information theory. following section, indexes computed copNDVI using moving window 81 pixels (9 px side). Alpha values Hill, Rényi parametric Rao indexes set 0 2 every 0.5. addition, set na.tolerance=0.2, meaning moving windows 10% pixels equal NA set NA.","code":"#Shannon's Diversity sha <- Shannon(copNDVI,window=9,na.tolerance=0.2,np=1)  #Pielou's Evenness pie <- Pielou(copNDVI,window=9,na.tolerance=0.2,np=1)  #Berger-Parker's Index ber <- BergerParker(copNDVI,window=9, na.tolerance=0.2, np=1)  #Parametric Rao's quadratic entropy with alpha ranging from 1 to 3 prao <- paRao(copNDVI, window=9, alpha=c(1:3), na.tolerance=0.8, dist_m=\"euclidean\", np=1)  #Cumulative residual entropy  cre <- CRE(copNDVI, window=9, na.tolerance=1, np=1, simplify=0)  #Hill's numbers hil <- Hill(copNDVI, window=9, alpha=seq(0,1,0.5), na.tolerance=0.2, np=1)  #Rényi's Index ren <- Renyi(copNDVI, window=9, alpha=seq(0,1,0.5), na.tolerance=0.2, np=1)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_01_Basics.html","id":"visualise-output-spatrasters-the-shape-of-continents-is-deformed-by-the-nas-in-the-9x9-moving-windows","dir":"Articles","previous_headings":"","what":"Visualise output SpatRasters (the shape of continents is deformed by the NAs in the 9x9 moving windows)","title":"Indices of diversity from NDVI.","text":"","code":"#Shannon's Diversity levelplot(sha, main=\"Shannon's entropy from Copernicus NDVI 5 km (9 px-side moving window)\", as.table = T,layout=c(0,1,1), ylim=c(-60,75), margin = list(draw = TRUE)) #Pielou's Evenness levelplot(pie, main=\"Pielou's evenness from Copernicus NDVI 5 km (9 px-side moving window)\", as.table = T, layout=c(0,1,1), ylim=c(-60,75), margin = list(draw = TRUE)) #Berger-Parker' Index levelplot(ber, main=\"Berger-Parker's index from Copernicus NDVI 5 km (9 px-side moving window)\", as.table = T, layout=c(0,1,1), ylim=c(-60,75), margin = list(draw = TRUE)) #Parametric Rao's quadratic Entropy levelplot(rast(prao[[1]]), main=\"Parametric Rao's quadratic entropy from Copernicus NDVI 5 km (9 px-side moving window)\", as.table = T,layout=c(0,3,1), ylim=c(-60,75), margin = list(draw = TRUE)) #Cumulative residual entropy levelplot(cre, main=\"Cumulative residual entropy from Copernicus NDVI 5 km (9 px-side moving window)\", as.table = T, layout=c(0,1,1), ylim=c(-60,75), margin = list(draw = TRUE)) #Hill's numbers (alpha=0, 0.5 and 1) levelplot(terra::rast(hil), main=\"Hill's numbers from Copernicus NDVI 5 km (9 px-side moving window)\", as.table = T, layout=c(0,3,1), ylim=c(-60,75)) #Renyi' Index (alpha=0, 0.5 and 1) levelplot(terra::rast(ren), main=\"Renyi's entropy from Copernicus NDVI 5 km (9 px-side moving window)\", as.table = T,layout=c(0,3,1), names.attr=paste(\"alpha\",seq(0,1,0.5),sep=\" \"), ylim=c(-60,75), margin = list(draw = FALSE))"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_02_Area_based_Rao.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Area-based Rao's index.","text":"SpatRaster called copNDVI loaded together package rasterdiv. copNDVI 8-bit raster, meaning pixel values range 0 255. stretch match familiar (-1,1) values range using terra::stretch(copNDVI,minv=-1,maxv=1). original dataset resampled 1/10th spatial resolution pixels values 253, 254 255 (water) set NA’s.","code":"copNDVI <- load_copNDVI() copNDVIlr <- terra::aggregate(copNDVI, fact=10) values(copNDVIlr) <- as.integer(values(copNDVIlr)) world <- load_world()"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_02_Area_based_Rao.html","id":"compute-area-based-raos-index","dir":"Articles","previous_headings":"","what":"Compute Area based Rao’s Index","title":"Area-based Rao's index.","text":"","code":"RaoC <- paRao(x=copNDVIlr, area=world, field='CONTINENT', alpha=c(1,2)) #Plot classic area-based Rao's index plot(RaoC, col=hcl(RaoC$alpha.1*10), main=\"Classic Rao's index per continent alpha 1\") text(RaoC, label=paste(\"Rao'Q =\", round(RaoC$alpha.1,1)), col=\"black\", family=\"Arial\", halo=TRUE)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_02_Area_based_Rao.html","id":"compute-multidimension-area-based-raos-index","dir":"Articles","previous_headings":"","what":"Compute multidimension area-based Rao’s Index","title":"Area-based Rao's index.","text":"","code":"# Adding a second \"noise\" SpatRaster layer # copNDVIlr <- terra::aggregate(copNDVI, fact=20) values(copNDVIlr) <- as.integer(values(copNDVIlr)) noise = rast(copNDVIlr) noise[] = as.integer(runif(n=ncell(noise),min=1, max=10)) RaoMC <- paRao(x=c(copNDVIlr,noise), area=world, field='CONTINENT', alpha=2, method=\"multidimension\", simplify=0) #Plot area-based Rao's index plot(RaoMC, col=hcl(RaoMC$alpha.2*10000), main=\"Multidimension Rao's index per continent alpha 10\") text(RaoMC, label=paste(\"Rao'Q =\", round(RaoMC$alpha.2,3)), col=\"black\", family=\"Arial\", halo=TRUE)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_02_Area_based_Rao.html","id":"additional-example-subsetting-on-a-continent-and-then-using-a-grid-vector-to-derive-raos-in-each-cell","dir":"Articles","previous_headings":"","what":"Additional example subsetting on a continent and then using a grid vector to derive Rao’s in each cell","title":"Area-based Rao's index.","text":"","code":"#Subset africa <- subset(world, world$CONTINENT==\"Africa\")  #Make the raster grid africa.r <- rast(ext(africa), nrow=20, ncol=20, crs = \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\") africa.r[] <- 1:ncell(africa.r)  #Vectorise the SpatRaster africa.v = as.polygons(africa.r) #Derive Rao's (alpha=2) for each grid cell RaoGRID <- paRao(x=copNDVIlr, area=africa.v, field='lyr.1', alpha=2, simplify=0, na.tolerance=0.2) #Transform the spatial polygon data frame in a raster layer that can be used in levelplot rr <- rast(RaoGRID, ncol=20, nrow=20) values(rr) <- RaoGRID$alpha.2 #Plot Rao's per grid cell ggplot() +   geom_raster(data = as.data.frame(rr, xy=TRUE), aes(x = x, y = y, fill = lyr.1)) +   scale_fill_viridis(option = \"D\", direction = 1) +    geom_polygon(data = fortify(as(africa.v, \"Spatial\")), aes(x = long, y = lat, group = group), fill = NA, color = \"grey\", linewidth=0.3) +   geom_polygon(data = fortify(as(world, \"Spatial\")), aes(x = long, y = lat, group = group), fill = NA, color = \"black\", , linewidth=0.5) +   theme(legend.position = \"none\", aspect.ratio = 0.5)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_03_Advanced_multidimension_Rao.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Multidimension Rao's Index.","text":"vignette, demonstrate compute multidimensional Rao’s Index using rasterdiv multiple numerical matrices, represented spatially autocorrelated SpatRaster objects.","code":""},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_03_Advanced_multidimension_Rao.html","id":"creating-autocorrelated-spatial-patterns","dir":"Articles","previous_headings":"Overview","what":"Creating Autocorrelated Spatial Patterns","title":"Multidimension Rao's Index.","text":"First, establish grid used create spatial patterns semivariogram model. Next, define semivariogram use simulate autocorrelated spatial data. simulated data, create two SpatRaster objects represent environmental conditions like plant functional traits.","code":"gridDim <- 40 xy <- expand.grid(x=1:gridDim, y=1:gridDim) varioMod <- vgm(psill=0.005, range=100, model='Exp') zDummy <- gstat(formula=z~1, locations = ~x+y, dummy=TRUE, beta=200, model=varioMod, nmax=1) set.seed(123) xyz <- predict(zDummy, newdata=xy, nsim=2) # Define coordinate reference system utm32N <- \"+proj=utm +zone=32 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\" # Create SpatRasters r <- terra::rast(nrow=40, ncol=40, crs=utm32N, ext=ext(0,10000, 0,10000)) r1 <- r # Populate with simulated values values(r) <- xyz$sim1 values(r1) <- xyz$sim2"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_03_Advanced_multidimension_Rao.html","id":"computing-multidimensional-raos-index","dir":"Articles","previous_headings":"Overview","what":"Computing Multidimensional Rao’s Index","title":"Multidimension Rao's Index.","text":"now calculate multidimensional Rao’s Index using varying window sizes alpha values. output nested list SpatRaster can transform stack SpatRaster plotted together input layers, follows:","code":"mRao <- paRao(x=list(r, r1), window=c(3, 5), alpha=c(1, Inf), na.tolerance=1, method=\"multidimension\", simplify=3)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_03_Advanced_multidimension_Rao.html","id":"visualisation-of-the-result","dir":"Articles","previous_headings":"Overview > Computing Multidimensional Rao’s Index","what":"Visualisation of the result","title":"Multidimension Rao's Index.","text":"","code":"# Create a list of all the rasters to plot rasters_to_plot <- c(r, r1, mRao[[1]]$alpha.1, mRao[[2]]$alpha.Inf) names(rasters_to_plot) <- c(\"Raster1\", \"Raster2\", \"Rao_Index_Window_3\", \"Rao_Index_Window_5\") # Use lapply to create a list of levelplots plots_list <- lapply(rasters_to_plot, function(rst) {   levelplot(as.matrix(rst, wide=TRUE), margin=FALSE,    col.regions=magma(100),    main=list(label=names(rst),    cex=1.5)) })  # Arrange the plots in a grid do.call(gridExtra::grid.arrange, c(plots_list, ncol = 2))"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_03_Advanced_multidimension_Rao.html","id":"computing-multidimensional-raos-index-for-time-series","dir":"Articles","previous_headings":"Overview","what":"Computing Multidimensional Rao’s Index for Time Series","title":"Multidimension Rao's Index.","text":"Now, demonstrate compute multidimensional Rao’s Index time series rasters accounting phenology, compare Rao’s Index time series without distance metrics account phenology.","code":""},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_03_Advanced_multidimension_Rao.html","id":"creating-autocorrelated-spatio-temporal-patterns","dir":"Articles","previous_headings":"Overview","what":"Creating Autocorrelated Spatio-Temporal Patterns","title":"Multidimension Rao's Index.","text":"temporally autocorrelated matrices show different seasonality square area centre. area may example represents building another land cover type less pronounced seasonal variation overall lower index diversity. See time series plotted visualises different trends index values subset pixels, inside outside square area.","code":"# Define variogram model for spatial autocorrelation varioMod <- vgm(psill=2, range=20, model='Exp')  # Generate initial spatially correlated data zDummy <- gstat(formula=z~1, locations = ~x+y, dummy=TRUE, beta=1, model=varioMod, nmax=1) set.seed(123) initial_spatial_data <- predict(zDummy, newdata=xy, nsim=1) initial_spatial_matrix <- matrix(as.integer(initial_spatial_data$sim1 * 100), nrow=gridDim, ncol=gridDim) # Generate a time series with temporal correlation t_steps <- 100 s_dims <- c(gridDim, gridDim) seasonal_amplitude <- 10 seasonal_amplitudeR <- 5 seasonal_frequency <- 2 * pi / t_steps seasonal_frequencyR <- 2 * pi / t_steps non_seasonal_mask <- matrix(FALSE, nrow=gridDim, ncol=gridDim) non_seasonal_mask[15:25, 15:25] <- TRUE  # 11 rows centered in the middle # Initialize the 3D array to store the time series data time_series_data <- array(0, dim=c(s_dims, t_steps))  # Set the first time step with the generated spatial data initial_spatial_matrix[non_seasonal_mask] <- floor(rnorm(length(initial_spatial_matrix[non_seasonal_mask]), mean(initial_spatial_matrix), sd = 50))  time_series_data[,,1] <- initial_spatial_matrix # Generate the remaining time steps for (t in 2:t_steps) {   for (i in 1:s_dims[1]) {     for (j in 1:s_dims[2]) {       if (non_seasonal_mask[i, j]) {         seasonal_effect <- seasonal_amplitudeR * sin(seasonal_frequencyR * t)         noise <- rnorm(1, mean = 0, sd = 1)         time_series_data[i, j, t] <- as.integer(time_series_data[i, j, t - 1] + seasonal_effect + noise)       } else {         seasonal_effect <- seasonal_amplitude * sin(seasonal_frequency * t)         noise <- rnorm(1, mean = 0, sd = 2)  # Adding some noise for variability         time_series_data[i, j, t] <- as.integer(time_series_data[i, j, t - 1] + seasonal_effect + noise)       }     }   } } # Convert the 3D array to a SpatRaster for visualization raster_ts <- rast(time_series_data, extent = ext(0, 40, 0, 40), crs=utm32N)  # Plot the time series for a few specific pixels to illustrate the seasonal pattern plot(1:t_steps, seq(min(as.matrix(raster_ts)), max(as.matrix(raster_ts)), length.out = t_steps), type = 'o', col = 'white', xlab = 'Time Step', ylab = 'Value')  for (cl in sample(ncol(raster_ts),10)) {   for (rw in sample(ncol(raster_ts),10)) {     pixel_time_series <- time_series_data[rw, cl, ]     lines(1:t_steps, pixel_time_series, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.3),ylab=\"Index value\")   } } # Set dates for the time series dates <- seq(as.Date(\"2023-01-01\"), as.Date(\"2023-12-31\"), length.out = nlyr(raster_ts))"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_03_Advanced_multidimension_Rao.html","id":"computing-multidimensional-raos-index-with-and-without-phenology","dir":"Articles","previous_headings":"Overview","what":"Computing Multidimensional Rao’s Index with and without phenology","title":"Multidimension Rao's Index.","text":"","code":"# Calculate Phenological Rao's Index using TWDTW RaoPhen <- paRao(x = raster_ts,                   window = 5,                   alpha = 2,                   na.tolerance = 0,                   time_vector = dates,                   method = \"multidimension\",                   dist_m = \"twdtw\",                   np = 7, progBar = FALSE)  # Calculate Rao's Index using Euclidean distance RaoEuc <- paRao(x = raster_ts,                  window = 5,                  alpha = 2,                  na.tolerance = 0,                  method = \"multidimension\",                  dist_m = \"euclidean\",                  np = 7, progBar = FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_03_Advanced_multidimension_Rao.html","id":"visualisation-of-the-result-1","dir":"Articles","previous_headings":"Overview > Computing Multidimensional Rao’s Index with and without phenology","what":"Visualisation of the result","title":"Multidimension Rao's Index.","text":"key takeaway accounting seasonality index time series, can reduce artifact hotspots Rao’s index. hotspots often arise transitions areas high spatial variability low spatial variability, due plant phenology buildings human-made objects. effect illustrated square area centre plot .","code":"# Visualization raster_ts_plot <- levelplot(mean(raster_ts), margin = FALSE,                              col.regions = viridis(100),                              main = list(label = \"Average index\",                              cex = 1.5))  RaoP_plot <- levelplot(RaoPhen[[1]][[1]], margin = FALSE,                         col.regions = viridis(100),                         main = list(label = \"Phenological Rao\",                         cex = 1.5))  Rao_plot <- levelplot(RaoEuc[[1]][[1]], margin = FALSE,                        col.regions = viridis(100),                        main = list(label = \"Rao\",                        cex = 1.5))  do.call(gridExtra::grid.arrange, c(list(raster_ts_plot, Rao_plot, RaoP_plot), ncol = 3))"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_04_Accumulation_Rao.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Derive the Accumulation Rao's Index","text":"copNDVI RasterLayer bundled rasterdiv package. ’s 8-bit raster, signifying pixel values ranging 0 255. align familiar range (-1,1), can use command raster::stretch(copNDVI, minv=-1, maxv=1).","code":"copNDVI <- load_copNDVI()"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_04_Accumulation_Rao.html","id":"resample-ndvi-to-a-coarser-resolution","dir":"Articles","previous_headings":"","what":"Resample NDVI to a coarser resolution","title":"Derive the Accumulation Rao's Index","text":"expedite computation, SpatRaster undergo “resampling” resolution 20 times coarser, focussing specifically Sardinia Corsica islands Mediterranean Sea.","code":"#Resample using terra::aggregate and a linear factor of 20 copNDVIlr <- aggregate(copNDVI, fact=20) ndvi.before <- crop(copNDVI, ext(8,10,38.5,43.5)) col.ndvi <- colorRampPalette(c('brown', 'yellow', 'lightgreen','green', \"darkgreen\")) levelplot(ndvi.before,layout=c(1,1), margin=FALSE, col.regions=col.ndvi,main=\"copNDVI cropped\")"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_04_Accumulation_Rao.html","id":"simulating-ndvi-value-reduction-e-g--due-to-extensive-forest-fires","dir":"Articles","previous_headings":"","what":"Simulating NDVI Value Reduction (e.g., Due to Extensive Forest Fires)","title":"Derive the Accumulation Rao's Index","text":"Pixels NDVI values exceeding 150 reduced, based normal distribution centred 50 standard deviation 5.","code":"ndvi.after <- ndvi.before names(ndvi.after) <- \"after\" ndvi.after[ndvi.after >= 150] <- ndvi.after[ndvi.after >= 150] - as.integer(rnorm(length(ndvi.after[ndvi.after >= 150]), mean=50, sd=5)) levelplot(c(ndvi.before, ndvi.after), layout=c(2,1), margin=FALSE, col.regions=col.ndvi, main=\"copNDVI\", names.attr=c(\"Before\", \"After\"))"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_04_Accumulation_Rao.html","id":"compute-the-accumulation-raos-index","dir":"Articles","previous_headings":"","what":"Compute the accumulation Rao’s index","title":"Derive the Accumulation Rao's Index","text":"","code":"#The accumulation Rao's index (accRao) will be calculated for the two rasters and for each pixel using alphas ranging from 1 to 10. accrao.before <- RaoAUC(alphas=1:10, x=ndvi.before, dist_m=\"euclidean\", window=3, method=\"classic\", rasterAUC=TRUE, na.tolerance=0.4, np=1) accrao.after <- RaoAUC(alphas=1:10, x=ndvi.after, dist_m=\"euclidean\", window=3, method=\"classic\", rasterAUC=TRUE, na.tolerance=0.4, np=1) names(accrao.after[[1]]) <- \"after\"  #The absolute difference between before and after can now be calculated accrao.diff <- abs(accrao.after[[1]] - accrao.before[[1]])"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_04_Accumulation_Rao.html","id":"visualise-the-difference","dir":"Articles","previous_headings":"Compute the accumulation Rao’s index","what":"Visualise the difference","title":"Derive the Accumulation Rao's Index","text":"## Demonstrate accRao calculation demonstrate calculation accRao using specific 3x3 pixel moving window NDVI, change. begin, let’s extract 3x3 pixel area two rasters. Next, let’s construct straightforward function compute parametric Rao’s Index across vector NDVI values. Using established function, can now determine Rao’s index NDVI value vectors timepoints t0 t1, exploring alpha values 1 10. integrating Rao’s values timepoints t0 t1, first approximate function interpolate Rao’s index across different alpha levels.","code":"l1 <- levelplot(c(accrao.before[[1]],accrao.after[[1]]),as.table = T, layout=c(0,2,1), margin=FALSE,col.regions=col.ndvi, names.attr=c(\"Before\", \"After\"),main=\"AccRao index from copNDVI\") l2 <- levelplot(accrao.diff, layout=c(1,1), margin=FALSE, main=\"Difference\")  grid.arrange(l1,l2, layout_matrix = rbind(c(1,2))) ndvi.t0 <- as.matrix(ndvi.before,wide=T)[7:9, 6:8, drop=FALSE] ndvi.t1 <- as.matrix(ndvi.after,wide=T)[7:9, 6:8, drop=FALSE] alphas = 1:10 #set the alpha interval over which to integrate Rao's index N = 3^2 #and set the number of pixels in the selected window RaoFx <- function(alpha,N,D) {( sum((1/(N^4)) * D^alpha )*2)^(1/alpha)} rao.t0 <- sapply(alphas, function(a) {RaoFx(alpha=a, N=N,D=as.vector(ndvi.t0))}) rao.t1 <- sapply(alphas, function(a) {RaoFx(alpha=a, N=N,D=as.vector(ndvi.t1))}) #t_0 accrao.t0f <- approxfun(x=alphas,y=rao.t0) accrao.t0 <- integrate(accrao.t0f, lower=1,upper=10, subdivisions = 500) print(accrao.t0) #t-1 accrao.t1f <- approxfun(x=alphas,y=rao.t1) accrao.t1 <- integrate(accrao.t1f, lower=1,upper=10, subdivisions = 500) print(accrao.t1)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_04_Accumulation_Rao.html","id":"visualising-accumulation-function-differences","dir":"Articles","previous_headings":"Compute the accumulation Rao’s index","what":"Visualising Accumulation Function Differences","title":"Derive the Accumulation Rao's Index","text":"Let’s depict disparities two accumulation functions showcasing areas respective curves. Now values two integral visualise differences two accumulation functions representing area curve.","code":"accrao.df <- cbind.data.frame(alphas,rao.t0,rao.t1,alphas1=rep(0,10)) g1 <- ggplot(accrao.df,aes(x=alphas,y=rao.t0)) +  ylab(\"AccRao's Index\") + geom_line(col=\"red\",lwd=3) + geom_area(data=accrao.df,aes(x=alphas,y=rao.t0),fill=\"red\",alpha=0.3,inherit.aes=FALSE) + geom_area(data=accrao.df,aes(x=alphas,y=rao.t1),fill=\"blue\",alpha=0.3,inherit.aes=FALSE) + geom_line(data=accrao.df,aes(x=alphas,y=rao.t1),col=\"blue\",lwd=3,inherit.aes=FALSE) + geom_text(data=cbind.data.frame(x=3.5,y=60),aes(x=x,y=y),label=expression(integral((frac(1, N^4) %.% D^alpha)^(frac(1,alpha)) * dx == 456, alpha==0, 10)),col=\"red\",cex=5,inherit.aes=FALSE) + geom_text(data=cbind.data.frame(x=7,y=25),aes(x=x,y=y),label=expression(integral((frac(1, N^4) %.% D^alpha)^(frac(1,alpha)) * dx == 343, alpha==0, 10)),col=\"blue\",cex=5,inherit.aes=FALSE) + geom_text(data=cbind.data.frame(x=8,y=72),aes(x=x,y=y),label=\"Difference = 113\",col=\"black\",cex=4,angle=12,inherit.aes=FALSE) + ggtitle(\"AccRao index before, after and difference\") + theme_bw()  # #Everything in one plot, the red and white squares overlayed on the rasters represent the moving window selected for the exercise.  l1 <- l1+levelplot(ndvi.t0,col.regions=\"red\") l2 <- l2+levelplot(ndvi.t0,col.regions=\"white\") grid.arrange(l1,l2,g1, layout_matrix = rbind(c(1,2),c(3,3)))"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_05_Helical_Plots.html","id":"ndvi-time-series-of-a-deciduous-forest","dir":"Articles","previous_headings":"","what":"NDVI Time Series of a Deciduous Forest","title":"Visualising rasterdiv indexes with Helical Plots","text":"ndviForestTS list 3x3 matrix simulating (following sinusoidal function Gaussian noise) NDVI values (8-bit) patch deciduous forest temperate climate 1st January 3 years.","code":"# Load NDVI time series data ndviForestTS <- readRDS(system.file(\"extdata\", \"ndviForestTS.rds\", package = \"rasterdiv\"))  # Calculate the average NDVI for the forest patch avgNDVI <- sapply(ndviForestTS, function(x) sum(x) / 3^2)  # Plot the average NDVI over time dates <- seq(as.Date(\"2023-01-01\"), by = \"day\", length.out = length(ndviForestTS)) plot(dates, avgNDVI, type = 'l', col = 'darkgreen', xlab = 'Day of Year', ylab = 'NDVI', main = 'Seasonal NDVI Variation')"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_05_Helical_Plots.html","id":"raos-index-calculation","dir":"Articles","previous_headings":"","what":"Rao’s Index Calculation","title":"Visualising rasterdiv indexes with Helical Plots","text":"calculate Rao’s Index using three different alpha values (1, 5, 10) just one three years.","code":"# Calculate Rao's Index for alpha values 1, 5, and 10 RaoT <- lapply(ndviForestTS[1:365], function(x) {   list(     a1 = paRao(x, window = 3, alpha = 1, na.tolerance = 0.1),     a5 = paRao(x, window = 3, alpha = 5, na.tolerance = 0.1),     a10 = paRao(x, window = 3, alpha = 10, na.tolerance = 0.1)   ) })  # Extract integer values for each alpha RaoT.C <- t(sapply(RaoT, function(x) sapply(x, function(y) y[[1]][[1]][2, 2]))) colnames(RaoT.C) <- c(\"Rao's with alpha = 1\", \"Rao's Alpha = 5\", \"Rao's Alpha = 10\")"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_05_Helical_Plots.html","id":"data-preparation-for-helical-plotting","dir":"Articles","previous_headings":"","what":"Data Preparation for Helical Plotting","title":"Visualising rasterdiv indexes with Helical Plots","text":"heliPrep function designed process time series data visualization using heliPlot function. applies moving average filter smooth data, enhancing helical plot’s visual appeal producing pronounced curves. filterWidth parameter allows customisation moving window’s breadth, considers preceding subsequent values calculations.","code":"# Prepare data for helical plotting dataPrepRao <- do.call(rbind, lapply(colnames(RaoT.C), function(alpha) {   df <- heliPrep(dates[1:365], RaoT.C[,alpha], filterWidth=90)   df$alpha <- alpha   df }))"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_05_Helical_Plots.html","id":"helical-plots-visualisation","dir":"Articles","previous_headings":"","what":"Helical Plots Visualisation","title":"Visualising rasterdiv indexes with Helical Plots","text":"data now appropriately smoothed, heliPlot can generate helical plots. function incorporates ggforce::geom_bspline() refine smoothness time series representation. n parameter controls granularity B-spline curve, representing total number points used interpolation process. ’s crucial n set higher actual number points interpolated ensure smooth curve without graphical artefacts.  Moreover, NDVI time series can effectively visualised using helical plots. accentuate spiralling trends, may arise daily fluctuations water content artefacts spectral data retrieval, partition year two distinct sections. approach allows us closely observe differentiate subtle shifts within phase annual vegetative cycle.   plots depict seasonal cycle NDVI values broadleaved forest patch. values rise spring, culminate peak July (first figure), plateau final summer months diminishing early autumn response leaf senescence (second figure). x-axis demonstrates rate change NDVI comparably stable growth decline phases. consistency anticipated since values simulated using monotonous sinusoidal function overlay Gaussian noise.","code":"# Create helical plots for each alpha heliPlot(dataPrepRao, facet = TRUE, group = \"alpha\", arrow = FALSE, labelInterval = 180, sizeRange = c(0.05, 2), facetScales = \"free_x\", n=2000) # Prepare NDVI data dataPrepNDVI <- heliPrep(dates, avgNDVI, filterWidth=14)  # Create helical plot for NDVI till the spring months heliPlot(dataPrepNDVI[1:250,], arrow = TRUE, labelInterval = 30, sizeRange = c(0.01, 2),n=10000, ylab=\"Average NDVI 8-bit values\") # Create helical plot for NDVI for the winter months heliPlot(dataPrepNDVI[251:365,], arrow = TRUE, labelInterval = 30, sizeRange = c(0.01, 2),n=10000, ylab=\"Average NDVI 8-bit values\")"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_05_Helical_Plots.html","id":"applying-helical-plots-to-covid-19-data","dir":"Articles","previous_headings":"","what":"Applying helical plots to COVID-19 data","title":"Visualising rasterdiv indexes with Helical Plots","text":"final note, can visualise trend deaths caused COVID-19 first months recent pandemic, using helical plots. method initially used represent dynamics COVID-19 case numbers can provide insights progression pandemic time. begin, must acquire relevant COVID-19 data. analysis centre select group countries, particular emphasis daily confirmed cases fatalities. use heliPrep() function prepare data plotting. involves smoothing daily death counts visualise rate change time. now create helical plots either single country multiple countries comparison.","code":"# Download data for selected countries up to a specified date. covidCases <- COVID19::covid19(   country = c(\"Italy\", \"US\", \"Belgium\", \"Germany\",\"France\"),    level = 1,    end = \"2020-04-05\" )[, c(\"date\", \"confirmed\", \"deaths\", \"population\", \"administrative_area_level_1\")]   # Calculate daily metrics. covidCases.df <- do.call(rbind.data.frame, lapply(   unique(covidCases$administrative_area_level_1), function(x) {   temp <- covidCases[covidCases$administrative_area_level_1%in%x,]   temp$dailyCases <- temp$confirmed - c(0,head(temp$confirmed,-1))   temp$dailyDeaths <- temp$deaths - c(0,head(temp$deaths,-1))   return(temp) }))  # Remove NA's covidCases.df <- na.omit(covidCases.df) # Prepare data for each administrative area. covidPrep <- lapply(unique(covidCases.df$administrative_area_level_1), function(x) {   temp <- covidCases.df[covidCases.df$administrative_area_level_1%in%x,]   outPrep <- heliPrep(dates=temp$date, values=temp$dailyDeaths, filterWidth=3)   outPrep$country=x   return(outPrep)   }) covidPrep <- do.call(rbind.data.frame,covidPrep) # Plot for Italy. heliPlot(covidPrep[covidPrep$country%in%\"Italy\",], arrow = FALSE,    labelInterval = 365, n=5000, sizeRange=c(0.01, 3)) heliPlot(covidPrep, arrow = FALSE, facet=FALSE, gr=\"country\",    labelInterval = 365, sizeRange = c(0.1, 4), n=10000)"},{"path":"https://mattmar.github.io/rasterdiv/articles/rasterdiv_05_Helical_Plots.html","id":"customising-heliplot","dir":"Articles","previous_headings":"Applying helical plots to COVID-19 data","what":"Customising heliPlot","title":"Visualising rasterdiv indexes with Helical Plots","text":"heliPlot can customised ggplot2 functions match specific styles references. example, mimic visualizations Conversation’s article COVID-19, can adjust plot follows:  customisation HeliPlot provided includes manual colour scales, legend adjustments, panel border styling attempt replicate (simplified) appearance Conversation’s article COVID-19.","code":"heliPlot(   covidPrep,   arrow = FALSE,   facet = FALSE,   gr = \"country\",   labelInterval = 15,   sizeRange = c(0.01, 3),   n = 50000,   ylab = \"Average Number of Deaths per Day\",   xlab = \"Increase or Decrease in Deaths per Day\",   angle= 45 ) +   scale_x_continuous(breaks = seq(-250, 300, 50)) +   scale_y_continuous(breaks = seq(0, 1400, 200)) +   scale_colour_manual(     values = c(\"#ad363e\", \"#01a0e3\", \"#6c5575\", \"#f27e32\", \"#1f437d\")   ) +   guides(colour = guide_legend(title = NULL)) +   theme(     aspect.ratio = 0.7,     legend.position = c(0.85, 0.15),     panel.border = element_rect(color = \"black\", fill = NA, size = 1)   ) +    ggtitle(\"Mortality in five countries attributed to COVID-19 (January 23 to April 5, 2020).\")"},{"path":"https://mattmar.github.io/rasterdiv/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matteo Marcantonio. Author, maintainer. Martina Iannacito. Author, contributor. Elisa Marchetto. Contributor. Elisa Thouverai. Author, contributor. Michele Torresani. Author, contributor. Daniele Da Re. Author. Clara Tattoni. Author. Giovanni Bacaro. Author. Saverio Vicario. Author, contributor. Carlo Ricotta. Author. Duccio Rocchini. Author, contributor.","code":""},{"path":"https://mattmar.github.io/rasterdiv/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rocchini D, Thouverai E, Marcantonio M, Iannacito M, Da Re D, Torresani M, Bacaro G, Bazzichetto M, Bernardi , Foody G, Furrer R, Kleijn D, Larsen S, Lenoir J, Malavasi M, Marchetto E, Messori F, Montaghi , Moudrý V, Naimi B, Ricotta C, Rossini M, Santi F, Santos M, Schaepman M, Schneider F, Schuh L, Silvestri S, Ŝímová P, Skidmore , Tattoni C, Tordoni E, Vicario S, Zannini P, Wegmann M (2021). “rasterdiv - Information Theory tailored R package measuring ecosystem heterogeneity space: origin back.” Methods Ecology Evolution, 12(6), 2195. doi:10.1111/2041-210X.13583. Rocchini D, Marcantonio M, Da Re D, Bacaro G, Feoli E, Foody G, Furrer R, Harrigan R, Kleijn D, Iannacito M, Lenoir J, Lin M, Malavasi M, Marchetto E, Meyer R, Moudry V, Schneider F, Šímová P, Thornhill , Thouverai E, Vicario S, Wayne R, Ricotta C (2021). “zero infinity: Minimum maximum diversity planet spatio-parametric Rao’s quadratic entropy.” Global Ecology Biogeography, 30(5), 2315. doi:10.1111/geb.13270.","code":"@Article{,   title = {rasterdiv - An Information Theory tailored R package for measuring ecosystem heterogeneity from space: To the origin and back},   volume = {12},   doi = {10.1111/2041-210X.13583},   number = {6},   year = {2021},   journal = {Methods in Ecology and Evolution},   author = {Duccio Rocchini and Elisa Thouverai and Matteo Marcantonio and Martina Iannacito and Daniele {Da Re} and Michele Torresani and Giovanni Bacaro and Manuele Bazzichetto and Alessandra Bernardi and Giles Foody and Reinhard Furrer and David Kleijn and Stefano Larsen and Jonathan Lenoir and Marco Malavasi and Elisa Marchetto and Filippo Messori and Alessandro Montaghi and Vítězslav Moudrý and Babak Naimi and Carlo Ricotta and Micol Rossini and Francesco Santi and Maria Santos and Michael Schaepman and Fabian Schneider and Leila Schuh and Sonia Silvestri and Petra Ŝímová and Andrew Skidmore and Clara Tattoni and Enrico Tordoni and Saverio Vicario and Piero Zannini and Martin Wegmann},   pages = {2195}, } @Article{,   title = {From zero to infinity: Minimum to maximum diversity of the planet by spatio-parametric Rao’s quadratic entropy},   volume = {30},   doi = {10.1111/geb.13270},   number = {5},   journal = {Global Ecology and Biogeography},   author = {Duccio Rocchini and Matteo Marcantonio and Daniele {Da Re} and Giovanni Bacaro and Enrico Feoli and Giles Foody and Reinhard Furrer and Ryan Harrigan and David Kleijn and Martina Iannacito and Jonathan Lenoir and Meixi Lin and Marco Malavasi and Elisa Marchetto and Rachel Meyer and Vítězslav Moudry and Fabian Schneider and Petra Šímová and Andrew Thornhill and Elisa Thouverai and Saverio Vicario and Robert Wayne and Carlo Ricotta},   year = {2021},   pages = {2315}, }"},{"path":[]},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/index.html","id":"stable-version-from-cran","dir":"","previous_headings":"Installation","what":"Stable version from CRAN:","title":"Diversity Indices for Numerical Matrices","text":"","code":"install.packages(\"rasterdiv\")"},{"path":"https://mattmar.github.io/rasterdiv/index.html","id":"development-version-from-github","dir":"","previous_headings":"Installation","what":"Development version from GitHub:","title":"Diversity Indices for Numerical Matrices","text":"","code":"# install.packages(\"remotes\") remotes::install_github(\"mattmar/rasterdiv\")"},{"path":"https://mattmar.github.io/rasterdiv/index.html","id":"what-is-rasterdiv","dir":"","previous_headings":"","what":"What is rasterdiv?","title":"Diversity Indices for Numerical Matrices","text":"rasterdiv R package provides functions apply diversity indexes based Information Theory RasterLayer numerical matrices. Supported indexes include: Parametric Rao’s quadratic entropy (classical multidimensional); Shannon’s diversity index; Pielou’s evenness index; Hill’s generalised entropy; Rényi’s generalised entropy; Berger-Parker index; Cumulative Residual Entropy (CRE)","code":""},{"path":"https://mattmar.github.io/rasterdiv/index.html","id":"new-features","dir":"","previous_headings":"","what":"New Features","title":"Diversity Indices for Numerical Matrices","text":"Time Series Integration: package recently integrated time series remote sensing data derive Rao’s index, example considering plant phenology. See vignette: Multidimension Rao’s Index. Helical Graphs: Prepare plot time series “helical graphs”. See vignette: Visualising rasterdiv indexes Helical Plots.","code":""},{"path":"https://mattmar.github.io/rasterdiv/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Diversity Indices for Numerical Matrices","text":"Moving Window Area-Based Calculations: Derive indexes using “moving window” approach (functions) area-based Parametric Rao’s quadratic entropy via paRao()","code":""},{"path":"https://mattmar.github.io/rasterdiv/index.html","id":"learn-more-on-rasterdiv","dir":"","previous_headings":"","what":"Learn More on rasterdiv","title":"Diversity Indices for Numerical Matrices","text":"rasterdiv—Information Theory tailored R package measuring ecosystem heterogeneity space: origin back; Measuring diversity space: global view free open source rasterdiv R package coding perspective; zero infinity: Minimum maximum diversity planet spatio-parametric Rao’s quadratic entropy Helical graphs visualize NDVI temporal variation forest vegetation open source space Phenological Diversity Trends Remote Sensing Datacubes","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":null,"dir":"Reference","previous_headings":"","what":"Berger-Parker's diversity index — BergerParker","title":"Berger-Parker's diversity index — BergerParker","text":"Computes Berger-Parker's diversity index different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Berger-Parker's diversity index — BergerParker","text":"","code":"BergerParker(   x,   window = 3,   rasterOut = TRUE,   np = 1,   na.tolerance = 1,   cluster.type = \"SOCK\",   debugging = FALSE )"},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Berger-Parker's diversity index — BergerParker","text":"x Input data may matrix, Spatial Grid Data Frame, SpatRaster, list objects. latter case, first element list considered. window side square moving window, must odd numeric value greater 1 ensure target pixel centre moving window. Default value 3. rasterOut Boolean, TRUE, output SpatRaster format x template. np number processes (cores) spawned. Default value 1. na.tolerance numeric value (0.0-1.0) indicates proportion NA values tolerated calculate Berger-Parker's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise, Rao's index calculated considering non-NA values. Default values 1.0 (.e., tolerance NA's). cluster.type type cluster created. options \"MPI\" (calls \"makeMPIcluster\"), \"FORK\", \"SOCK\" (call \"makeCluster\"). Default type \"SOCK\". debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Berger-Parker's diversity index — BergerParker","text":"numerical matrix dimensions dim(x).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Berger-Parker's diversity index — BergerParker","text":"Berger-Parker's index relative abundance abundant category (.e., unique numerical values considered numerical matrix). Berger-Parker's index equals logarithm inverse Renyi's index order infinity, \\(log(1/{}^\\infty H)\\) inverse Hill's index order infinity, \\(1/{}^\\infty D\\).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Berger-Parker's diversity index — BergerParker","text":"Linux users need install libopenmpi MPI parallel computing. Linux Ubuntu users may try: apt-get update; apt-get upgrade; apt-get install mpi; apt-get install libopenmpi-dev; apt-get install r-cran-rmpi Microsoft Windows users may need additional work use \"MPI\", see:https://bioinfomagician.wordpress.com/2013/11/18/installing-rmpi-mpi--r--mac--windows/","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Berger-Parker's diversity index — BergerParker","text":"Berger, W.H., Parker, F.L. (1970). Diversity planktonic foraminifera deep-sea sediments\". Science, 168: 1345-1347.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Berger-Parker's diversity index — BergerParker","text":"Marcantonio Matteo marcantoniomatteo@gmail.com, Martina Iannacito martina.iannacito@inria.fr, Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Berger-Parker's diversity index — BergerParker","text":"","code":"if (FALSE) { # \\dontrun{ # Minimal example; compute Renyi's index with alpha 1:5  a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3) berpar <- BergerParker(x=a, window=3) } # }"},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerP.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Berger-Parker Index on a Matrix — BergerParkerP","title":"Calculate Berger-Parker Index on a Matrix — BergerParkerP","text":"function computes Berger-Parker Index cell matrix, using parallelized approach considering specified moving window.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Berger-Parker Index on a Matrix — BergerParkerP","text":"","code":"BergerParkerP(x, window = 1, na.tolerance = 1, debugging = FALSE, np = 1)"},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Berger-Parker Index on a Matrix — BergerParkerP","text":"x numeric matrix representing data index calculated. window width moving window consider cell. actual window size `(2 * window + 1) x (2 * window + 1)`. Default 1. na.tolerance tolerance level missing data within moving window. window processed proportion non-missing data threshold. Value 0 1. Default 1. debugging Boolean flag enable disable debugging messages. Default FALSE. np number processes (cores) spawned. Default value 2.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Berger-Parker Index on a Matrix — BergerParkerP","text":"matrix dimensions `x`, cell contains         Berger-Parker Index calculated window around cell.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Berger-Parker Index on a Matrix — BergerParkerP","text":"","code":"if (FALSE) { # \\dontrun{ data <- matrix(runif(100), nrow = 10) bp_index <- BergerParkerP(data, window = 1, np=2) } # }"},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Berger-Parker's diversity index — BergerParkerS","title":"Sequential Berger-Parker's diversity index — BergerParkerS","text":"function calculates Berger-Parker's diversity index cell matrix, considering specified moving window around cell.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Berger-Parker's diversity index — BergerParkerS","text":"","code":"BergerParkerS(x, window = 1, na.tolerance = 1, debugging = FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Berger-Parker's diversity index — BergerParkerS","text":"x numeric matrix representing data index calculated. window width moving window consider cell. actual window size `(2 * window + 1) x (2 * window + 1)`. Default 1. na.tolerance tolerance level missing data within moving window. window processed proportion non-missing data threshold. Value 0 1. Default 1. debugging Boolean flag enable disable debugging messages. Default FALSE.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Berger-Parker's diversity index — BergerParkerS","text":"matrix dimensions `x`, cell contains         Berger-Parker's diversity index calculated window around cell.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequential Berger-Parker's diversity index — BergerParkerS","text":"Berger-Parker's diversity index calculated sequentially raster matrix.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/BergerParkerS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential Berger-Parker's diversity index — BergerParkerS","text":"","code":"data <- matrix(runif(100), nrow = 10) bp_index <- BergerParkerS(data, window = 1) #>  #>  #> Processing moving Window: 3"},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Residual Entropy (CRE) Function — CRE","title":"Cumulative Residual Entropy (CRE) Function — CRE","text":"Computes Cumulative Residual Entropy (CRE) spatial raster data. function can used either single raster layer list raster layers. supports classic multidimensional methods CRE computation.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Residual Entropy (CRE) Function — CRE","text":"","code":"CRE(   x,   window = 3,   method = \"classic\",   rasterOut = TRUE,   rescale = FALSE,   na.tolerance = 1,   simplify = 2,   np = 1,   cluster.type = \"SOCK\",   progBar = TRUE,   debugging = FALSE )"},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Residual Entropy (CRE) Function — CRE","text":"x matrix, SpatRaster, list SpatRaster objects. window size moving window, must odd integer. method method CRE computation, either \"classic\" \"multidimensional\". rasterOut Logical, TRUE, returns SpatRaster, else returns matrix. rescale Logical, TRUE, rescales data processing. na.tolerance numeric value 0 1, indicating tolerance level NA values. simplify Integer, number decimal places data rounding case float numbers. np number parallel processes use. cluster.type type parallel cluster use, options \"SOCK\", \"FORK\", \"MPI\". progBar logical. TRUE progress bar shown. debugging Logical, TRUE, provides additional debugging information execution.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Residual Entropy (CRE) Function — CRE","text":"Depending 'rasterOut' parameter, function returns either SpatRaster matrix.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/CRE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Residual Entropy (CRE) Function — CRE","text":"","code":"if (FALSE) { # \\dontrun{ # For a matrix input: result <- CRE(matrix_data, window=3, method=\"classic\")  # For a SpatRaster input: result <- CRE(raster_data, window=3, method=\"classic\", rasterOut=TRUE) } # }"},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":null,"dir":"Reference","previous_headings":"","what":"Hill's index of diversity - Hill numbers (D) — Hill","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"Computes Hill's index diversity (Hill numbers) different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"","code":"Hill(   x,   window = 3,   alpha = 1,   base = exp(1),   rasterOut = TRUE,   np = 1,   na.tolerance = 1,   cluster.type = \"SOCK\",   debugging = FALSE )"},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"x Input data may matrix, Spatial Grid Data Frame, SpatRaster, list objects. latter case, first element list considered. window side square moving window. must odd numeric value greater 1 ensure target pixel centre moving window. Default value 3. alpha Order Hill number compute index. alpha vector length greater 1, index calculated x value sequence. base logarithm base calculation, default natural logarithm. rasterOut Boolean; TRUE, output SpatRaster format x template. np number processes (cores) spawned. Default value 1. na.tolerance numeric value 0.0 1.0, indicates proportion NA values tolerated calculate Hill's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA; otherwise, Hill's index calculated considering non-NA values. Default value 1.0 (.e., full tolerance NA's). cluster.type type cluster created. Options \"MPI\" (calls \"makeMPIcluster\"), \"FORK,\" \"SOCK\" (call \"makeCluster\"). Default type \"SOCK\". debugging boolean variable set FALSE default. TRUE, additional messages printed debugging purposes.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"list matrices dimension dim(x) length equal length alpha.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"Hill numbers (\\({}^qD\\)) calculated numerical matrices \\({}^qD = (\\sum_{=1}^{R} {p^q}_i)^{1/(1-q)}\\), q order Hill number, R total number categories (.e., unique numerical values numerical matrix), p relative abundance category. q=1, Shannon.R called calculate \\(exp(H^1)\\) instead indefinite \\({}^1D\\). \\(q > 2*10^9\\), BergerParker.R called calculate \\(1/{{}^\\infty D}\\). Hill numbers low order weight rare categories, whereas Hill numbers higher order weight dominant categories.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"Linux users need install libopenmpi MPI parallel computing. Linux Ubuntu users may try: apt-get update; apt-get upgrade; apt-get install mpi; apt-get install libopenmpi-dev; apt-get install r-cran-rmpi Microsoft Windows users may need additional work use \"MPI\". details, see: https://bioinfomagician.wordpress.com/2013/11/18/installing-rmpi-mpi--r--mac--windows/","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"Hill, M.O. (1973). Diversity evenness: unifying notation consequences. Ecology 54, 427-432.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/Hill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hill's index of diversity - Hill numbers (D) — Hill","text":"","code":"# Minimal example; compute Hill's index with alpha 1:5  a <- matrix(c(10,10,10,20,20,20,20,30,30),ncol=3,nrow=3) hill <- Hill(x=a,window=3,alpha=1:5) #>  #>  #> Processing moving Window: 3 #>  #>  #> Processing alpha: 2 Moving Window: 3 #>  #>  #> Processing alpha: 3 Moving Window: 3 #>  #>  #> Processing alpha: 4 Moving Window: 3 #>  #>  #> Processing alpha: 5 Moving Window: 3"},{"path":"https://mattmar.github.io/rasterdiv/reference/HillP.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallelised Hill's diversity index — HillP","title":"Parallelised Hill's diversity index — HillP","text":"Parallelised computation Hill's diversity index.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/HillP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallelised Hill's diversity index — HillP","text":"","code":"HillP(rasterm, window, alpha, na.tolerance, debugging, np)"},{"path":"https://mattmar.github.io/rasterdiv/reference/HillP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallelised Hill's diversity index — HillP","text":"rasterm Input data. window Half side square moving window. alpha Alpha value order diversity Hill's Index. na.tolerance numeric value 0.0 1.0, indicates proportion NA values tolerated calculate index moving window rasterm. relative proportion NA's moving window bigger na.tolerance, value window set NA; otherwise, index calculated considering non-NA values. Default value 0.0 (.e., tolerance NA's). debugging boolean variable set FALSE default. TRUE, additional messages printed debugging purposes. np Number processes parallel computation.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/HillP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallelised Hill's diversity index — HillP","text":"Matrix list matrices Hill index computed moving window given size.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/HillP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallelised Hill's diversity index — HillP","text":"Marcantonio Matteo marcantoniomatteo@gmail.com, Martina Iannacito martina.iannacito@inria.fr, Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/HillS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Hill's diversity index — HillS","title":"Sequential Hill's diversity index — HillS","text":"Computes Hill's diversity index non-parallelized (sequential) manner.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/HillS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Hill's diversity index — HillS","text":"","code":"HillS(x, window = 1, alpha = 1, na.tolerance = 1, debugging = FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/HillS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Hill's diversity index — HillS","text":"x Input data. window Half side square moving window. alpha Alpha value order diversity Hill's Index. na.tolerance numeric value 0.0 1.0, indicates proportion NA values tolerated calculate Hill's index moving window x. relative proportion NA's moving window greater na.tolerance, value window set NA; otherwise, index calculated considering non-NA values. Default value 1.0 (.e., full tolerance NA's). debugging boolean variable set FALSE default. TRUE, additional messages printed debugging purposes.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/HillS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Hill's diversity index — HillS","text":"Matrix list matrices Hill index computed moving window given size.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/HillS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequential Hill's diversity index — HillS","text":"Marcantonio Matteo marcantoniomatteo@gmail.com, Martina Iannacito martina.iannacito@inria.fr, Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":null,"dir":"Reference","previous_headings":"","what":"Pielou's Evenness Index — Pielou","title":"Pielou's Evenness Index — Pielou","text":"Calculates Pielou's Evenness Index given raster object specified window size. function can operate either sequential parallel mode.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pielou's Evenness Index — Pielou","text":"","code":"Pielou(   x,   window = 3,   rasterOut = TRUE,   np = 1,   na.tolerance = 1,   cluster.type = \"SOCK\",   debugging = FALSE )"},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pielou's Evenness Index — Pielou","text":"x raster object (matrix, SpatRaster, SpatialGridDataFrame, list containing one ). window size moving window used calculation. Must odd integer. rasterOut Logical, TRUE output raster object; FALSE matrix. np number processes use parallel mode. np > 1, parallel computation enabled. na.tolerance tolerance level NA values within moving window, expressed proportion (0 1). cluster.type type cluster use parallel computation (e.g., \"SOCK\", \"FORK\"). debugging Logical, TRUE debugging information printed.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Pielou.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pielou's Evenness Index — Pielou","text":"Returns raster object matrix containing Pielou's Evenness Index values.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouP.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallelised Pielou's diversity index — PielouP","title":"Parallelised Pielou's diversity index — PielouP","text":"function calculates Pielou's diversity index parallelized manner, allowing improved performance suitable hardware. diversity index computed using moving window approach input data.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallelised Pielou's diversity index — PielouP","text":"","code":"PielouP(x, window = 1, na.tolerance = 1, debugging = FALSE, np)"},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallelised Pielou's diversity index — PielouP","text":"x Input raster data, representing environmental variable(s) diversity index calculated. window size half-side square moving window used calculation. determines scale diversity assessed. na.tolerance numeric value (0.0 1.0) indicating proportion NA values acceptable moving window raster data. proportion NA values window exceeds threshold, resulting value window set NA. default 0.0, indicating tolerance NA values. debugging Boolean flag indicating whether additional console output generated debugging purposes. Defaults FALSE. np number processes (cores) spawned. Default value 2.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallelised Pielou's diversity index — PielouP","text":"matrix list matrices, depending input, containing calculated Pielou diversity index values. cell output matrix represents diversity index calculated corresponding moving window input data.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallelised Pielou's diversity index — PielouP","text":"Marcantonio Matteo marcantoniomatteo@gmail.com, Martina Iannacito martina.iannacito@inria.fr, Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parallelised Pielou's diversity index — PielouP","text":"","code":"if (FALSE) { # \\dontrun{ # Demonstration of function with hypothetical data # Ensure you replace this with actual raster data demo_raster <- #... (your raster data here) result <- PielouP(x = demo_raster, win = 3, na.tolerance = 0.1, debugging = FALSE) # proceed with analyzing 'result' } # }"},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Pielou's diversity index — PielouS","title":"Sequential Pielou's diversity index — PielouS","text":"Computes Pielou's diversity index using sequential method, particularly useful handling large datasets might efficiently processed standard, non-sequential manner.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Pielou's diversity index — PielouS","text":"","code":"PielouS(x, window = 1, na.tolerance = 1, debugging = FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Pielou's diversity index — PielouS","text":"x Input raster data, representing environmental variable(s) diversity index calculated. window size half-side square moving window used calculation. determines scale diversity assessed. na.tolerance numeric value (0.0 1.0) indicating proportion NA values acceptable moving window raster data. proportion NA values window exceeds threshold, resulting value window set NA. default 0.0, indicating tolerance NA values. debugging Boolean flag indicating whether additional console output generated debugging purposes. Defaults FALSE.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Pielou's diversity index — PielouS","text":"matrix list matrices, depending input, containing calculated Pielou diversity index values. cell output matrix represents diversity index calculated corresponding moving window input data.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequential Pielou's diversity index — PielouS","text":"Marcantonio Matteo marcantoniomatteo@gmail.com, Martina Iannacito martina.iannacito@inria.fr, Duccio Rocchini duccio.rocchini@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/PielouS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential Pielou's diversity index — PielouS","text":"","code":"if (FALSE) { # \\dontrun{ # Demonstration of function with hypothetical data # Ensure you replace this with actual raster data demo_raster <- #... (your raster data here) result <- PielouS(x = demo_raster, win = 3, na.tolerance = 0.1, debugging = FALSE) # proceed with analyzing 'result' } # }"},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":null,"dir":"Reference","previous_headings":"","what":"Rao's index — Rao","title":"Rao's index — Rao","text":"alias `paRao` `alpha` fixed 2.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rao's index — Rao","text":"","code":"Rao(x, ...)"},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rao's index — Rao","text":"x Input data may matrix, Spatial Grid Data Frame, SpatRaster, list objects. ... parameters passed `paRao`.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rao's index — Rao","text":"return value description.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Rao.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rao's index — Rao","text":"","code":"if (FALSE) { # \\dontrun{ data(volcano) r <- terra::rast(volcano) res <- Rao(x = r, window = 3) terra::plot(res[[1]][[1]]) } # }"},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":null,"dir":"Reference","previous_headings":"","what":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"RaoAUC computes accumulation function (integral area curve) parametric version Rao's index quadratic entropy (Q) different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"","code":"RaoAUC(   alphas = 1:5,   x,   dist_m = \"euclidean\",   window = 9,   method = \"classic\",   rasterAUC = TRUE,   lambda = 0,   na.tolerance = 1,   rescale = FALSE,   diag = TRUE,   simplify = 0,   np = 1,   cluster.type = \"SOCK\",   debugging = FALSE )"},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"alphas continuous vector alphas form start:end integrated parametric Rao's index. Default value 1:5. x Input data may matrix, Spatial Grid Data Frame, SpatRaster, list objects. latter case, method=\"classic\" first element list considered. dist_m Define type distance calculated numerical categories. dist_m can character string defines name distance derive \"euclidean\". distance names allowed proxy::dist. Alternatively, dist_m can function calculates user-defined distance, (.e., function(x,y) {return(cos(y-x)-sin(y-x))}) matrix distances. method=\"multidimension\" \"euclidean\", \"manhattan\", \"canberra\", \"minkowski\" \"mahalanobis\" can used. Default value \"euclidean\". proxy::dist matrix function assume distance matrix, therefore distance derived. window side square moving window, must odd numeric value greater 1 ensure target pixel centre moving window. Default value 3. method Currently, two ways calculate parametric version Rao's index. method=\"classic\", normal parametric Rao's index calculated single matrix. method=\"multidimension\" (experimental!) list matrices must provided input. latter case, overall distance matrix calculated multi- hyper-dimensional system using distance measure defined function argument dist_m. pairwise distance multiplied inverse squared number pixels considered moving window, Rao's Q finally derived applying summation. Default value \"classic\". rasterAUC Boolean, TRUE output SpatRaster object x raster template. lambda value lambda Minkowski's distance. Considered dist_m = \"minkowski\" method=\"multidimension\". Default value 0. na.tolerance Numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate parametric Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 1.0 (.e., tolerance NA's). Default value 1.0. rescale Boolean. Considered method=\"multidimension\". TRUE, element x rescaled centred. diag Boolean. TRUE diagonal distance matrix filled 0's, otherwise NA's. diag=TRUE alpha=0, output matrix inexorably composed 0's. simplify Number decimal places retained calculate distances Rao's index. x floats. np number processes (cores) spawned. Default value 2. cluster.type type cluster created. options \"MPI\" (calls \"makeMPIcluster\"), \"FORK\" (calls \"makeForkCluster\"), \"SOCK\" (calls \"makeCluster\"). Default type \"SOCK\". debugging boolean variable set FALSE default. TRUE, additional messages printed. debugging .","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"matrix dimension dim(x). rasterAUC=TRUE, output SpatRaster x template.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"accumulation function parametric Rao's Index (\\(Q\\)) calculated integrating numerically range alphas. *RaoAUC* therefore equal \\((\\int_{}^{b} {1\\{N^4}}\\cdot{d_{,j}^{\\alpha}})^{1\\{\\alpha}} dx\\). N number pixels moving window, alpha weight assigned distances.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"Rocchini, D., M. Marcantonio, C. Ricotta (2017). Measuring Rao’s Q diversity index remote sensing: open source solution. Ecological Indicators. 72: 234–238.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"Matteo Marcantonio marcantoniomatteo@gmail.com","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RaoAUC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accumulation function for parametric Rao's index of quadratic entropy (Q) — RaoAUC","text":"","code":"# Minimal example; RaoAUC with alphas ranging from 1 to 10 a <- matrix(c(10,10,10,20,20,20,20,30,30), ncol=3, nrow=3) out <- RaoAUC(alphas=1:10, x=a, window=3, dist_m=\"euclidean\", na.tolerance=1, rasterAUC=TRUE) #> Warning: Simplify=0. Rounding data to 0 decimal places. #> Warning: Input data are float numbers. Converting data to integer matrices... #>  #>  #> Processing alpha: 1 Moving Window: 3 #>  #>  #> Processing alpha: 1 Moving Window: 3 #>  #>  #> Processing alpha: 2 Moving Window: 3 #>  #>  #> Processing alpha: 2 Moving Window: 3 #>  #>  #> Processing alpha: 3 Moving Window: 3 #>  #>  #> Processing alpha: 3 Moving Window: 3 #>  #>  #> Processing alpha: 4 Moving Window: 3 #>  #>  #> Processing alpha: 4 Moving Window: 3 #>  #>  #> Processing alpha: 5 Moving Window: 3 #>  #>  #> Processing alpha: 5 Moving Window: 3 #>  #>  #> Processing alpha: 6 Moving Window: 3 #>  #>  #> Processing alpha: 6 Moving Window: 3 #>  #>  #> Processing alpha: 7 Moving Window: 3 #>  #>  #> Processing alpha: 7 Moving Window: 3 #>  #>  #> Processing alpha: 8 Moving Window: 3 #>  #>  #> Processing alpha: 8 Moving Window: 3 #>  #>  #> Processing alpha: 9 Moving Window: 3 #>  #>  #> Processing alpha: 9 Moving Window: 3 #>  #>  #> Processing alpha: 10 Moving Window: 3 #>  #>  #> Processing alpha: 10 Moving Window: 3 #>  #> Integrating numerically Rao values over alphas..."},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":null,"dir":"Reference","previous_headings":"","what":"Renyi Diversity Index Calculation — Renyi","title":"Renyi Diversity Index Calculation — Renyi","text":"Computes Renyi diversity index given raster object. function allows specifying window size, alpha values, various parameters calculation Renyi index.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renyi Diversity Index Calculation — Renyi","text":"","code":"Renyi(   x,   window = 3,   alpha = 1,   base = exp(1),   rasterOut = TRUE,   np = 1,   na.tolerance = 1,   cluster.type = \"SOCK\",   debugging = FALSE )"},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renyi Diversity Index Calculation — Renyi","text":"x raster object can matrix, SpatialGridDataFrame, SpatRaster, list, RasterStack. window size moving window; must odd integer. alpha numeric vector alpha values Renyi index. base logarithm base calculation, default natural logarithm. rasterOut Logical; TRUE, returns SpatRaster object, otherwise returns list. np Number processes parallel computation. na.tolerance Tolerance level NA values, must within [0-1]. cluster.type Type cluster parallel computation, either \"SOCK\" \"MPI\". debugging Logical; TRUE, provides additional console output debugging.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Renyi Diversity Index Calculation — Renyi","text":"SpatRaster object list calculated Renyi indices.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Renyi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Renyi Diversity Index Calculation — Renyi","text":"","code":"if (FALSE) { # \\dontrun{ result <- Renyi(ndvi.8bit, window = 3, alpha = c(0, 1, 2)) } # }"},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiP.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallel Computation of Renyi's Diversity Index — RenyiP","title":"Parallel Computation of Renyi's Diversity Index — RenyiP","text":"function computes Renyi's diversity index cell matrix, using parallelized approach considering specified moving window.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallel Computation of Renyi's Diversity Index — RenyiP","text":"","code":"RenyiP(   x,   window = 1,   alpha = 1,   base = exp(1),   na.tolerance = 1,   debugging = FALSE,   np = 1 )"},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallel Computation of Renyi's Diversity Index — RenyiP","text":"x numeric matrix representing data index calculated. window width moving window consider cell. actual window size `(2 * window + 1) x (2 * window + 1)`. Default 1. alpha alpha parameter Renyi's index, influencing sensitivity species abundance. Default 1. base base logarithm used Renyi's formula. Default `exp(1)` (natural logarithm). na.tolerance tolerance level missing data within moving window. window processed proportion non-missing data threshold. Value 0 1. Default 1. debugging Boolean flag enable disable debugging messages. Default FALSE. np Number processes parallel computation.#'","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallel Computation of Renyi's Diversity Index — RenyiP","text":"matrix dimensions `x`, cell contains         Renyi's diversity index calculated window around cell.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parallel Computation of Renyi's Diversity Index — RenyiP","text":"","code":"data <- matrix(runif(100), nrow = 10) renyi_index <- RenyiP(data, window = 1, np = 1) #>  #>  #> Processing alpha: 1 Moving Window: 3 #> Warning: executing %dopar% sequentially: no parallel backend registered #>  #>  #>  Parallel calculation of Renyi's index complete."},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Renyi's diversity index — RenyiS","title":"Sequential Renyi's diversity index — RenyiS","text":"function calculates Renyi's diversity index index cell matrix, considering specified moving window around cell.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Renyi's diversity index — RenyiS","text":"","code":"RenyiS(   x,   window = 1,   alpha = 1,   base = exp(1),   na.tolerance = 1,   debugging = FALSE )"},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Renyi's diversity index — RenyiS","text":"x numeric matrix representing data index calculated. window width moving window consider cell. actual window size `(2 * window + 1) x (2 * window + 1)`. Default 1. alpha (used function, included compatibility) alpha parameter diversity indices, default 1. base base logarithm used Shannon formula, default `exp(1)` (natural logarithm). na.tolerance tolerance level missing data within moving window. window processed proportion non-missing data threshold. Value 0 1. Default 1. debugging Boolean flag enable disable debugging messages. Default FALSE.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Renyi's diversity index — RenyiS","text":"matrix dimensions `x`, cell contains         Renyi's diversity index calculated window around cell.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequential Renyi's diversity index — RenyiS","text":"Berger-Parker's diversity index calculated sequentially raster matrix.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/RenyiS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential Renyi's diversity index — RenyiS","text":"","code":"data <- matrix(runif(100), nrow = 10) renyi_index <- RenyiS(data, window = 1) #>  #>  #> Processing alpha: 1 Moving Window: 3"},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":null,"dir":"Reference","previous_headings":"","what":"Shannon's Evenness Index — Shannon","title":"Shannon's Evenness Index — Shannon","text":"Calculates Shannon's Evenness Index given raster object specified window size. function can operate either sequential parallel mode.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shannon's Evenness Index — Shannon","text":"","code":"Shannon(   x,   window = 3,   rasterOut = TRUE,   np = 1,   na.tolerance = 1,   cluster.type = \"SOCK\",   debugging = FALSE )"},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shannon's Evenness Index — Shannon","text":"x raster object (matrix, SpatRaster, SpatialGridDataFrame, list containing one ). window size moving window used calculation. Must odd integer. rasterOut Logical, TRUE output raster object; FALSE matrix. np number processes use parallel mode. np > 1, parallel computation enabled. na.tolerance tolerance level NA values within moving window, expressed proportion (0 1). cluster.type type cluster use parallel computation (e.g., \"SOCK\", \"FORK\"). debugging Logical, TRUE debugging information printed.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/Shannon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shannon's Evenness Index — Shannon","text":"Returns raster object matrix containing Shannon's Evenness Index values.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonP.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Shannon-Wiener Index on a Matrix — ShannonP","title":"Calculate Shannon-Wiener Index on a Matrix — ShannonP","text":"function computes Shannon-Wiener Index cell matrix, using parallelized approach considering specified moving window.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Shannon-Wiener Index on a Matrix — ShannonP","text":"","code":"ShannonP(x, window = 1, na.tolerance = 1, debugging = FALSE, np = 1)"},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Shannon-Wiener Index on a Matrix — ShannonP","text":"x numeric matrix representing data index abe calculated. window width moving window consider cell. actual window size `(2 * window + 1) x (2 * window + 1)`. Default 1. na.tolerance tolerance level missing data within moving window. window processed proportion non-missing data threshold. Value 0 1. Default 1. debugging Boolean flag enable disable debugging messages. Default FALSE. np Number processes parallel computation.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Shannon-Wiener Index on a Matrix — ShannonP","text":"matrix dimensions `x`, cell contains         Shannon-Wiener Index calculated window around cell.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Shannon-Wiener Index on a Matrix — ShannonP","text":"","code":"data <- matrix(runif(100), nrow = 10) shannon_index <- ShannonP(data, window = 1, np = 1 ) #>  #>  #> Processing moving Window: 3 #>  #>  #>  Parallel calculation of Shannon's index complete."},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonS.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Shannon-Wiener Index on a Matrix — ShannonS","title":"Calculate Shannon-Wiener Index on a Matrix — ShannonS","text":"function calculates Shannon-Wiener Index cell matrix, considering specified moving window around cell.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Shannon-Wiener Index on a Matrix — ShannonS","text":"","code":"ShannonS(x, window = 1, na.tolerance = 1, debugging = FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Shannon-Wiener Index on a Matrix — ShannonS","text":"x numeric matrix representing data index calculated. window width moving window consider cell. actual window size `(2 * window + 1) x (2 * window + 1)`. Default 1. na.tolerance tolerance level missing data within moving window. window processed proportion non-missing data threshold. Value 0 1. Default 1. debugging Boolean flag enable disable debugging messages. Default FALSE.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Shannon-Wiener Index on a Matrix — ShannonS","text":"matrix dimensions `x`, cell contains         Shannon-Wiener Index calculated window around cell.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ShannonS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Shannon-Wiener Index on a Matrix — ShannonS","text":"","code":"data <- matrix(runif(100), nrow = 10) shannon_index <- ShannonS(data, window = 1) #>  #>  #> Processing moving Window: 3"},{"path":"https://mattmar.github.io/rasterdiv/reference/copNDVI.html","id":null,"dir":"Reference","previous_headings":"","what":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","title":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","text":"SpatRaster (EPSG: 4326) global average NDVI value per pixel 21st June period 1999-2017.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/copNDVI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","text":"","code":"load_copNDVI()"},{"path":"https://mattmar.github.io/rasterdiv/reference/copNDVI.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","text":"SpatRaster containing following elements: NDVI Normalised Difference Vegetation Index value (0-255) 5 km pixel. index provides indication presence live green vegetation area.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/copNDVI.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","text":"https://land.copernicus.eu/en/products/vegetation","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/copNDVI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","text":"dataset provides long-term overview Normalised Difference Vegetation Index (NDVI) across globe. pixel represents 5 km area, NDVI values ranging 0 255.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/copNDVI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","text":"https://land.copernicus.eu/en/products/vegetation","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/copNDVI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copernicus Long Term (1999-2017) NDVI Overview (5km) — copNDVI","text":"","code":"copNDVI <- readRDS(system.file(\"extdata\", \"copNDVI.rds\", package = \"rasterdiv\"))"},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-CRE_.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Residual Entropy — .CRE_","title":"Cumulative Residual Entropy — .CRE_","text":"function calculates Cumulative Residual Entropy (CRE) given set values.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-CRE_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Residual Entropy — .CRE_","text":"","code":".CRE_(B, base = exp(1))"},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-CRE_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Residual Entropy — .CRE_","text":"B numeric vector matrix representing values CRE calculated. base base logarithm used calculation. default natural logarithm (e).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-CRE_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Residual Entropy — .CRE_","text":"numeric value representing CRE.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-CRE_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Residual Entropy — .CRE_","text":"","code":"B <- c(1, 2, 3, 4) .CRE_(B) #> [1] 0.9089087"},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-CumRes.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cumulative Residual Probability — .CumRes","title":"Calculate Cumulative Residual Probability — .CumRes","text":"function computes cumulative residual probability given set probabilities.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-CumRes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cumulative Residual Probability — .CumRes","text":"","code":".CumRes(a)"},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-CumRes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cumulative Residual Probability — .CumRes","text":"numeric vector matrix representing probabilities.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-CumRes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cumulative Residual Probability — .CumRes","text":"numeric vector matrix cumulative residual probabilities.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-CumRes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Cumulative Residual Probability — .CumRes","text":"","code":"a <- data.frame(V1= c(0.2, 0.3, 0.5), V2 =c(0.2, 0.3, 0.5)) .CumRes(a) #>       V1  V2 #> [1,] 2.0 1.0 #> [2,] 1.6 0.8 #> [3,] 1.0 0.5"},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Deltas.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Differences Among Values — .Deltas","title":"Calculate Differences Among Values — .Deltas","text":"function computes differences among values table, used probability calculations.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Deltas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Differences Among Values — .Deltas","text":"","code":".Deltas(P, first = 0)"},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Deltas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Differences Among Values — .Deltas","text":"P numeric vector matrix representing probabilities. first starting value difference calculation.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Deltas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Differences Among Values — .Deltas","text":"vector matrix differences.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Deltas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Differences Among Values — .Deltas","text":"","code":"P <- c(0.2, 0.3, 0.5) .Deltas(P) #> [1] 1"},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Point Probability — .Prob","title":"Calculate Point Probability — .Prob","text":"function computes probability point given vector matrix.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Point Probability — .Prob","text":"","code":".Prob(C)"},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Point Probability — .Prob","text":"C numeric vector matrix.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Point Probability — .Prob","text":"vector probabilities corresponding point `C`.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Point Probability — .Prob","text":"","code":"C <- c(1, 1, 2, 2, 3) .Prob(C) #> C #>   1   2   3  #> 0.4 0.4 0.2"},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Additional supporting functions like `.Reorder`, `.Cumsum`, `.Rev` — .Reorder","title":"Additional supporting functions like `.Reorder`, `.Cumsum`, `.Rev` — .Reorder","text":"functions provide utility operations like reordering dimensions, computing cumulative sums, reversing order along specific dimension.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Additional supporting functions like `.Reorder`, `.Cumsum`, `.Rev` — .Reorder","text":"","code":".Reorder(a, ax)"},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Additional supporting functions like `.Reorder`, `.Cumsum`, `.Rev` — .Reorder","text":", ax Additional parameters specific function. ax Additional parameters specific function.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/dot-Reorder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Additional supporting functions like `.Reorder`, `.Cumsum`, `.Rev` — .Reorder","text":"Output varies depending function.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/heliPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Helical Plot for Time Series Data — heliPlot","title":"Create a Helical Plot for Time Series Data — heliPlot","text":"Creates helical plot visualize time series data, emphasizing magnitude rate change time.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/heliPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Helical Plot for Time Series Data — heliPlot","text":"","code":"heliPlot(   data,   group = NULL,   facet = FALSE,   xlabel = \"Rate of Change\",   ylabel = \"Values\",   arrow = TRUE,   dateFont = 3,   dateInterval = FALSE,   sizeRange = c(1, 3),   facetScales = \"free\",   dateFormat = \"%d %b %y\",   n = nrow(data),   ... )"},{"path":"https://mattmar.github.io/rasterdiv/reference/heliPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Helical Plot for Time Series Data — heliPlot","text":"data data frame containing time series data required columns: \"values_avg\", \"change_rate\", \"date\". group (Optional) string specifying column name `data` use grouping data plot. NULL, grouping applied. facet Logical indicating whether facet plot based `group` variable. TRUE `group` NULL, error raised. xlabel Label x-axis, defaults \"Rate Change\". ylabel Label y-axis, defaults \"Values\". arrow Logical indicating whether add arrow end line, defaults TRUE. dateFont Numeric specifying size date font, defaults 3. dateInterval Numeric specifying interval date labels displayed. FALSE, date labels shown. sizeRange Numeric vector length 2 specifying range line widths. facetScales Character string indicating whether scales \"fixed\", \"free_x\", \"free_y\", \"free\". dateFormat Format date labels, defaults d-b-y. n Numeric specifying number points interpolate along spline, defaults number rows `data`. ... Additional arguments passed `ggplot2` layer functions.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/heliPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Helical Plot for Time Series Data — heliPlot","text":"`ggplot` object representing helical plot.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/heliPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Helical Plot for Time Series Data — heliPlot","text":"","code":"# Assuming `dataPrep` is a data frame prepared with the required structure:  if (FALSE) { # \\dontrun{ heliPlot(dataPrep, group = \"myGroup\", arrow = TRUE,  dateFont = 3, dateInterval = 30, sizeRange = c(1, 3)) } # }"},{"path":"https://mattmar.github.io/rasterdiv/reference/heliPrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Data for Helical Plotting — heliPrep","title":"Prepare Data for Helical Plotting — heliPrep","text":"function preprocesses time series data helical plotting applying moving average smoothing values rate change. also handles conversion numeric dates Date objects ensures proper alignment time series plotting.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/heliPrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Data for Helical Plotting — heliPrep","text":"","code":"heliPrep(dates, values, filterWidth = 7)"},{"path":"https://mattmar.github.io/rasterdiv/reference/heliPrep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Data for Helical Plotting — heliPrep","text":"dates vector dates associated values; can numeric Date objects. numeric, treated days since given start date. values numeric vector time series values corresponding dates. filterWidth size moving window calculate moving average. Defaults 7","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/heliPrep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Data for Helical Plotting — heliPrep","text":"data frame suitable helical plotting, containing original   dates, smoothed values (`ch_avg`), smoothed rate change (`ch_rate`),   endpoints plotting (`yend`, `xend`).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/heliPrep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Data for Helical Plotting — heliPrep","text":"","code":"if (FALSE) { # \\dontrun{   # Assume 'dates' and 'values' are available time series data   prepared_data <- heliPrep(dates, values)   # Now 'prepared_data' can be used for helical plotting with 'heliPlot' } # }"},{"path":"https://mattmar.github.io/rasterdiv/reference/load_copNDVI.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Copernicus NDVI data — load_copNDVI","title":"Load Copernicus NDVI data — load_copNDVI","text":"function loads returns Copernicus Long Term (1999-2017) NDVI Overview stored within package.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/load_copNDVI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Copernicus NDVI data — load_copNDVI","text":"","code":"load_copNDVI()"},{"path":"https://mattmar.github.io/rasterdiv/reference/load_copNDVI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Copernicus NDVI data — load_copNDVI","text":"`SpatRaster` object representing Copernicus NDVI data.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoAreaS.html","id":null,"dir":"Reference","previous_headings":"","what":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoAreaS","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoAreaS","text":"Calculates area-based sequential version parametric Rao's index quadratic entropy (Q). function designed situations diversity index needs consider geographical areas works raster data representing distribution species measures.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoAreaS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoAreaS","text":"","code":"mpaRaoAreaS(rasterm, area, alpha, simplify, dist_m, rescale, lambda, window)"},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoAreaS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoAreaS","text":"rasterm Raster; input raster data representing variables across geographic space. area Numeric; input vector data representing areas interest. alpha Numeric; alpha value order diversity Hill's Index. simplify Numeric; parameter determines rounding calculations. dist_m Character; type distance metric used (e.g., \"euclidean\", \"manhattan\", etc.). rescale Logical; whether scale centre values element raster data. lambda Numeric; lambda parameter Minkowski distance calculation. window Numeric; defines size moving window analysis.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoAreaS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoAreaS","text":"vector similar input, additional columns representing Rao's index values area.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoAreaS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoAreaS","text":"Matteo Marcantonio marcantoniomatteo@gmail.com, Duccio Rocchini duccio.rocchini@unibo., Michele Torresani michele.torresani@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoP.html","id":null,"dir":"Reference","previous_headings":"","what":"Multidimensional parallel Parametric Rao's index of quadratic entropy (Q) — mpaRaoP","title":"Multidimensional parallel Parametric Rao's index of quadratic entropy (Q) — mpaRaoP","text":"Multidimensional parametric Rao's index quadratic entropy (Q).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multidimensional parallel Parametric Rao's index of quadratic entropy (Q) — mpaRaoP","text":"","code":"mpaRaoP(   x,   alpha,   window,   dist_m,   na.tolerance,   rescale,   lambda,   diag,   time_vector,   stepness,   midpoint,   cycle_length,   time_scale,   debugging,   isfloat,   mfactor,   np,   progBar )"},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multidimensional parallel Parametric Rao's index of quadratic entropy (Q) — mpaRaoP","text":"x input list. alpha alpha value order diversity Hill's Index. window half side square moving window. dist_m Type distance used. na.tolerance numeric value \\((0.0-1.0)\\) indicates proportion NA values tolerated calculate Rao's index moving window x. relative proportion NA's moving window bigger na.tolerance, value window set NA, otherwise Rao's index calculated considering non-NA values. Default values 0.0 (.e., tolerance NA's). rescale Scale centre values element x. lambda Lambda value Minkowski distance. diag Boolean. Diagonal distance matrix. time_vector time; stepness numeric; steepness logistic function. midpoint numeric; midpoint logistic function cycle_length string; length cycle. Can numeric value string specifying units ('year', 'month', 'day', 'hour', 'minute', 'second'). numeric, cycle length units time_scale. string, specifies time unit cycle. time_scale string; Specifies time scale conversion. Must one 'year', 'month', 'day', 'hour', 'minute', 'second'. cycle_length string, time_scale changes unit result expressed. cycle_length numeric, time_scale used compute elapsed time seconds. debugging boolean variable set FALSE default. TRUE, additional messages printed. de-bugging . isfloat input data floats? mfactor Multiplication factor case input data float numbers. np number processes (cores) spawned. progBar logical. TRUE progress bar shown.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multidimensional parallel Parametric Rao's index of quadratic entropy (Q) — mpaRaoP","text":"list matrices dimension dim(x) length equal   length alpha.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multidimensional parallel Parametric Rao's index of quadratic entropy (Q) — mpaRaoP","text":"Duccio Rocchini duccio.rocchini@unibo., Marcantonio Matteo   marcantoniomatteo@gmail.com","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoS.html","id":null,"dir":"Reference","previous_headings":"","what":"Multidimensional sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoS","title":"Multidimensional sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoS","text":"function calculates multidimensional parametric Rao's index quadratic entropy (Q) using sequential method. particularly useful contexts parallel computation feasible desired. function applies moving window approach provided raster data stack.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multidimensional sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoS","text":"","code":"mpaRaoS(   x,   alpha,   window,   dist_m,   na.tolerance,   rescale,   lambda,   diag,   time_vector,   stepness,   midpoint,   cycle_length,   time_scale,   debugging,   isfloat,   mfactor,   np,   progBar )"},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multidimensional sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoS","text":"x input list. alpha Numeric; alpha value order diversity Hill's Index. window Numeric; half side square moving window used calculation. dist_m Character; type distance used analysis. na.tolerance Numeric; threshold 0.0 1.0 indicating allowable proportion NA values within moving window. proportion NA values exceeds , window's value set NA; otherwise, computation uses non-NA values. rescale Logical; TRUE, scales centres values element 'x'. lambda Numeric; lambda value used Minkowski distance calculation. diag Logical; TRUE, includes diagonal distance matrix computations. time_vector time; stepness numeric; steepness logistic function. midpoint numeric; midpoint logistic function cycle_length string; length cycle. Can numeric value string specifying units ('year', 'month', 'day', 'hour', 'minute', 'second'). numeric, cycle length units time_scale. string, specifies time unit cycle. time_scale string; Specifies time scale conversion. Must one 'year', 'month', 'day', 'hour', 'minute', 'second'. cycle_length string, time_scale changes unit result expressed. cycle_length numeric, time_scale used compute elapsed time seconds. debugging Logical; TRUE, additional diagnostic messages output, useful debugging. Default FALSE. isfloat Logical; specifies input data floats. mfactor Numeric; multiplication factor applied input data float numbers. np Number processes parallel computation. progBar logical. TRUE progress bar shown.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multidimensional sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoS","text":"list matrices, representing layer input RasterStack, containing calculated Rao's index values. dimensions correspond input, list length equal length 'alpha'.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/mpaRaoS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multidimensional sequential Parametric Rao's index of quadratic entropy (Q) — mpaRaoS","text":"Duccio Rocchini duccio.rocchini@unibo., Matteo Marcantonio marcantoniomatteo@gmail.com","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ndviForestTS.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated NDVI dataset — ndviForestTS","title":"Simulated NDVI dataset — ndviForestTS","text":"list 8-bit matrices.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ndviForestTS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated NDVI dataset — ndviForestTS","text":"list containing matrices: ndviForestTS List matrixes 9 cells simulating NDVI patch forests 3 years. matrix represents day time series.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ndviForestTS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated NDVI dataset — ndviForestTS","text":"list represents time series NDVI values patch forest 3 years. stored list, suitable explaining make helical plots.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/ndviForestTS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated NDVI dataset — ndviForestTS","text":"","code":"ndviForestTS <- readRDS(system.file(\"extdata\", \"ndviForestTS.rds\", package = \"rasterdiv\"))"},{"path":"https://mattmar.github.io/rasterdiv/reference/openCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a Parallel Cluster — openCluster","title":"Open a Parallel Cluster — openCluster","text":"Opens parallel cluster computation, registers parallel operations, ensures closure script exit.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/openCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a Parallel Cluster — openCluster","text":"","code":"openCluster(cluster.type = \"SOCK\", np = 2, progBar = TRUE, debugging = FALSE)"},{"path":"https://mattmar.github.io/rasterdiv/reference/openCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a Parallel Cluster — openCluster","text":"cluster.type character string specifying type cluster. Accepted values \"SOCK\", \"FORK\", \"MPI\". np integer specifying number processes used parallel cluster. progBar logical. TRUE progress bar shown. debugging logical. developer use.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/openCluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a Parallel Cluster — openCluster","text":"object representing parallel cluster.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/openCluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a Parallel Cluster — openCluster","text":"","code":"if (FALSE) { # \\dontrun{   # Open a SOCK cluster with 4 cores   cls <- openCluster(\"SOCK\", 4)   # Your parallel computation code here   # The cluster will automatically close when the script exits } # }"},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric Rao's index of quadratic entropy (Q) — paRao","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"computes parametric version Rao's index quadratic entropy (Q) different classes numeric matrices using moving window algorithm.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"","code":"paRao(   x,   area = NULL,   field = NULL,   dist_m = \"euclidean\",   window = 9,   alpha = 1,   method = \"classic\",   rasterOut = TRUE,   lambda = 0,   na.tolerance = 1,   rescale = FALSE,   diag = TRUE,   simplify = 0,   np = 1,   cluster.type = \"SOCK\",   progBar = TRUE,   debugging = FALSE,   time_vector = NA,   stepness = -0.5,   midpoint = 35,   cycle_length = \"year\",   time_scale = \"day\" )"},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"x Input data may matrix, Spatial Grid Data Frame, SpatRaster, list objects. area Input vector area layer area-based calculation. field Column name vector area layer use calculate index. dist_m Define type distance calculated numerical categories. `dist_m` can character string defines name distance derive \"euclidean\". distance names allowed proxy::dist. Alternatively, `dist_m` can function calculates user-defined distance, (.e., function(x,y) {return(cos(y-x)-sin(y-x))}) matrix distances. `method=\"multidimension\"` \"euclidean\", \"manhattan\", \"canberra\", \"minkowski\" \"mahalanobis\" can used. Default value \"euclidean\". `dist_m` matrix, function assume matrix contains distances. Moreover \"twdtw\" (time weighted dynamic time warping) can used way calculate distances time series `paRao` multidimensional mode. window side square moving window, must vector odd numeric values greater 1 ensure target pixel centre moving window. Default value 3. `window` can vector length greater 1, case, Rao's index calculated `x` value vector. alpha Weight distance matrix. `alpha = 0`, distances averaged geometric average, `alpha=1` arithmetic mean, `alpha = 2` quadratic mean, `alpha = 3` cubic mean, . `alpha` tends infinite (.e., higher maximum integer allowed R) `alpha=Inf`, maximum distance taken. `alpha` can vector length greater 1, case, Rao's index calculated `x` value vector. method Currently, two ways calculate parametric version Rao's index. `method=\"classic\"`, normal parametric Rao's index calculated single matrix. `method=\"multidimension\"` (experimental!), list matrices must provided input. latter case, overall distance matrix calculated multi- hyper-dimensional system using distance measure defined function argument `dist_m`. pairwise distance multiplied inverse squared number pixels considered moving window, Rao's Q finally derived applying summation. Default value `\"classic\"`. rasterOut Boolean, TRUE output SpatRaster object `x` template. lambda value lambda Minkowski's distance. Considered `dist_m = \"minkowski\"` `method=\"multidimension\"`. Default value 0. na.tolerance Numeric value (0.0-1.0) indicates proportion NA values tolerated calculate Rao's index moving window `x`. relative proportion NA's moving window bigger `na.tolerance`, value window set NA, otherwise Rao's index calculated considering non-NA values. Default value 1.0. rescale Boolean. Considered `method=\"multidimension\"`. TRUE, element `x` rescaled centred. diag Boolean. TRUE diagonal distance matrix filled 0's, otherwise NA's. `diag=TRUE` `alpha=0`, output matrix inexorably 0's. simplify Number decimal places retained calculate distances Rao's index. Default `simplify=0`. np number processes (cores) spawned. Default value 2. cluster.type type cluster created. options `\"MPI\"` (calls \"makeMPIcluster\"), `\"FORK\"`, `\"SOCK\"` (call \"makeCluster\"). Default type `\"SOCK\"`. progBar logical. TRUE progress bar shown. debugging boolean variable set FALSE default. TRUE, additional messages printed. debugging . time_vector time; stepness numeric; steepness logistic function. midpoint numeric; midpoint logistic function cycle_length string; length cycle. Can numeric value string specifying units ('year', 'month', 'day', 'hour', 'minute', 'second'). numeric, cycle length units time_scale. string, specifies time unit cycle. time_scale string; Specifies time scale conversion. Must one 'year', 'month', 'day', 'hour', 'minute', 'second'. cycle_length string, time_scale changes unit result expressed. cycle_length numeric, time_scale used compute elapsed time seconds.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"list matrices dimension `dim(x)` length equal length `alpha`. `rasterOut=TRUE` `x` SpatRaster, output list SpatRaster objects.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"parametric Rao's Index (Q) extension Rao's Index considers generalized mean distances. general formula parametric Rao's index Q_a = $$Q = \\sum_{, j} p_i p_j d_{ij}^{\\alpha}$$. `N` number numerical categories, `` `j` pair numerical categories moving window, `alpha` weight given distances. \"multidimension\" Rao's index, first distances among categories calculated considering one feature, overall Rao's Q derived using distances.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"Rao, C. R. (1982). Diversity dissimilarity coefficients: unified approach. Theoretical Population Biology, 21(1), 24-43.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRao.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parametric Rao's index of quadratic entropy (Q) — paRao","text":"","code":"if (FALSE) { # \\dontrun{ # loading data data(volcano) r <- terra::rast(volcano)  # we want to compute Rao's index on this data using a 3x3 window res <- paRao(x = r, window = 3, alpha = 2, method = \"classic\") terra::plot(res[[1]][[1]]) } # }"},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoAreaS.html","id":null,"dir":"Reference","previous_headings":"","what":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoAreaS","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoAreaS","text":"Area-Based Sequential Parametric Rao's index quadratic entropy (Q).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoAreaS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoAreaS","text":"","code":"paRaoAreaS(rasterm, area, alpha, simplify)"},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoAreaS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoAreaS","text":"rasterm input raster data. area input vector data. alpha alpha value order diversity Hill's Index. simplify Rounding parameter.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoAreaS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoAreaS","text":"vector input Rao's index pasted additional columns.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoAreaS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Area-Based Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoAreaS","text":"Marcantonio Matteo marcantoniomatteo@gmail.com, Duccio Rocchini duccio.rocchini@unibo., Michele Torresani michele.torresani@unibo.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoP.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallelized Parametric Rao's index of quadratic entropy (Q) — paRaoP","title":"Parallelized Parametric Rao's index of quadratic entropy (Q) — paRaoP","text":"function computes parametric Rao's index quadratic entropy (Q), measure biodiversity considers evolutionary distances species, utilizing parallel computing enhanced performance. computation applied moving window across input data.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallelized Parametric Rao's index of quadratic entropy (Q) — paRaoP","text":"","code":"paRaoP(   x,   alpha,   window,   dist_m,   na.tolerance,   diag,   debugging,   isfloat,   mfactor,   np,   progBar )"},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallelized Parametric Rao's index of quadratic entropy (Q) — paRaoP","text":"x Matrix data frame; input data index calculation performed. alpha Numeric; specifies alpha value order diversity Hill's Index. window Numeric; half side length square moving window used calculation. dist_m Character; specifies type distance metric used calculations. na.tolerance Numeric; threshold proportion NA values allowed moving window. exceeded, calculation window skipped. Values range 0.0 (tolerance) 1.0. diag Logical; indicates whether diagonal distance matrix included computation. Typically set FALSE. debugging Logical; set FALSE default. TRUE, additional console messages displayed debugging purposes. isfloat Logical; indicates whether input data values floating-point numbers. mfactor Integer; multiplication factor case input data float numbers. np Number processes parallel computation. progBar logical. TRUE progress bar shown.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallelized Parametric Rao's index of quadratic entropy (Q) — paRaoP","text":"list matrices corresponding computed Rao's index values. matrix list represents calculations performed moving window, dimensions equal dim(x).","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallelized Parametric Rao's index of quadratic entropy (Q) — paRaoP","text":"Duccio Rocchini duccio.rocchini@unibo., Matteo Marcantonio marcantoniomatteo@gmail.com","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoS.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoS","title":"Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoS","text":"Computes sequential version parametric Rao's index quadratic entropy (Q), measure used environmental ecological studies assess biodiversity considering evolutionary distance species. function performs calculations sequential manner moving window across input data.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoS","text":"","code":"paRaoS(   x,   alpha,   window,   dist_m,   na.tolerance,   diag,   debugging,   isfloat,   mfactor,   progBar )"},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoS","text":"x Matrix data frame; input data index calculation performed. alpha Numeric; specifies alpha value order diversity Hill's Index. window Numeric; half side length square moving window used calculation. dist_m Character; specifies type distance metric used calculations. na.tolerance Numeric; threshold proportion NA values allowed moving window. exceeded, calculation window skipped. Values range 0.0 (tolerance) 1.0. diag Logical; indicates whether diagonal distance matrix included computation. Typically set FALSE. debugging Logical; set FALSE default. TRUE, additional console messages displayed debugging purposes. isfloat Logical; indicates whether input data values floating-point numbers. mfactor Integer; indicates decimal position round. progBar logical. TRUE progress bar shown.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoS","text":"list matrices corresponding computed Rao's index values. matrix list represents calculations performed moving window, dimensions equal dim(x).","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/reference/paRaoS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequential Parametric Rao's index of quadratic entropy (Q) — paRaoS","text":"Duccio Rocchini duccio.rocchini@unibo., Matteo Marcantonio marcantoniomatteo@gmail.com","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/process_raster_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Raster Results — process_raster_result","title":"Process Raster Results — process_raster_result","text":"function processes results list calculations, packaging SpatRaster objects naming appropriately.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/process_raster_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Raster Results — process_raster_result","text":"","code":"process_raster_result(out, x, alpha, window)"},{"path":"https://mattmar.github.io/rasterdiv/reference/process_raster_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Raster Results — process_raster_result","text":"list containing results calculations need transformed SpatRaster objects. element list corresponds different calculation result. x list SpatRaster objects similar object used template creating new SpatRaster objects. Specifically, `x[[1]]` used template. alpha Numeric numeric vector indicating weight(s) used distance calculations generated ''. used label results appropriately. window Numeric numeric vector indicating size(s) moving window(s) used calculations generated ''. used label results.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/process_raster_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Raster Results — process_raster_result","text":"list SpatRaster objects corresponding different processed results. SpatRaster named based 'alpha' 'window' parameters used calculation. naming convention 'alpha.<alpha value>' inner lists 'window.<window size>' outer list.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/process_raster_result.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process Raster Results — process_raster_result","text":"function designed post-process results spatial calculations performed raster data. typical use case process results function performs calculations different 'windows' data, using varying 'alpha' parameters, returns results list. function takes list, converts element SpatRaster (using first SpatRaster 'x' template), assigns appropriate names based 'alpha' 'window' parameters.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/process_raster_result.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Raster Results — process_raster_result","text":"","code":"if (FALSE) { # \\dontrun{  # Assume 'result_list' is obtained from a previous calculation, containing # multiple results to be converted to SpatRaster objects. # 'raster_template' is a list of SpatRaster objects used as templates.  processed_results <- process_raster_result(out = result_list,                                             x = raster_template,                                             alpha = c(1, 2),                                             window = c(3, 5)) } # }"},{"path":"https://mattmar.github.io/rasterdiv/reference/validateInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Input Parameters for Diversity Index Calculation — validateInputs","title":"Validate Input Parameters for Diversity Index Calculation — validateInputs","text":"Validates input parameters diversity index calculation functions. Checks valid raster types, window sizes, alpha values, NA tolerance levels.","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/validateInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Input Parameters for Diversity Index Calculation — validateInputs","text":"","code":"validateInputs(x, window, alpha = 1, na.tolerance)"},{"path":"https://mattmar.github.io/rasterdiv/reference/validateInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Input Parameters for Diversity Index Calculation — validateInputs","text":"x Raster object validated. window Size moving window calculations. alpha Diversity index parameter, default 1. na.tolerance Proportion acceptable NA values within window (range: 0 1).","code":""},{"path":"https://mattmar.github.io/rasterdiv/reference/validateInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Input Parameters for Diversity Index Calculation — validateInputs","text":"None. Throws error input invalid.","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"rasterdiv-035","dir":"Changelog","previous_headings":"","what":"rasterdiv 0.3.5","title":"rasterdiv 0.3.5","text":"CRAN release: 2024-10-14","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-3-5","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.3.5","text":"Adds twdtw distance methods paRao() Adds back Rao() alias paRao(alpha=2)","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-3-5","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.3.5","text":"Changes N intended mpaRaoAreaS improvements paRaoS paRaoP Fixes bug progBar paRao()","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"rasterdiv-034","dir":"Changelog","previous_headings":"","what":"rasterdiv 0.3.4","title":"rasterdiv 0.3.4","text":"CRAN release: 2024-03-04","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-3-4","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.3.4","text":"Adds back CRE function (leaving old function syntax)","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-3-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.3.4","text":"Organises “accessory functions” separate file Documents almost “accessory functions” Tries improve progress bar Simplify heliPrep() Matches package book chapter","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-3-3","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.3.3","text":"Adds heliPrep heliPlot helical graphs Temporarily removes CRE function Adds vignettes accRao (4) Adds vignettes helical plots (5)","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-3-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.3.3","text":"Small changes vignettes Updated documentation Roxygen style Uses terra place raster Changes data type copNDVI (SpatRaster now) Changes data type world (SpatVector now) Improves documentation","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-3-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.3.2","text":"Fixes minor “bug” area based Rao allow polygons containing raster matrices just one value. Adds additional examples Area based Rao.","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"rasterdiv-031","dir":"Changelog","previous_headings":"","what":"rasterdiv 0.3.1","title":"rasterdiv 0.3.1","text":"CRAN release: 2022-11-24","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.3.1","text":"Fixes repetition paRao() manual","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.3.0","text":"Adds multidimension area-based Rao’s index paRao().","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.3.0","text":"Reorganises vignettes. Adds new GitHub site pkgdown().","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-2-5-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.2.5.2","text":"Adds testthat tests area-based Rao.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-2-5-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.2.5.1","text":"Made area-based paRao efficient. Adapted vignettes changed.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-2-5","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.2.5","text":"Starting implement area-based paRao.","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-2-5","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.2.5","text":"Vignettes reduced Added world vector dataset","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-2-4","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.2.4","text":"accRao now RaoAUC RaoAUC working paRao multidimensional mode.","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-2-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.2.4","text":"Fixed inconsistencies manual.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.2.2p1","text":"Fixed issue due high alphas caused parametric Rao’s go infinite (just added warning multidimensional version). Rao still deprecated connected background paRao(…, alpha=1) continuity older versions.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-2-2-1","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.2.2","text":"Rao() now deprecated, replaced paRao(…, alpha=1). Multiple window sizes can now indicated paRao(…, window=c(3,5)). Multidimension paRao now working np>1.","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.2.2","text":"Vignette multidimension Rao (rasterdiv_advanced_multimensionRao). Added tests folder testthat.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.2.1","text":"new function accRao derive accumulation function parametric Rao’s index range alphas. vignette (rasterdiv_advanced_accRao) show apply function added package.","code":""},{"path":[]},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"major-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rasterdiv 0.2.0","text":"New parametrization Rao’s quadratic entropy. parametrisation reconciles abundance-based indexes distance-based indexes (Rao). new function called paRao, stands parametric Rao’s entropy.","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rasterdiv 0.2.0","text":"Minor improvements structure main functions. Option save output rasterstack main functions. pbapply pbmcapply progress bars. Main vignette (rasterdiv_basics) simplified.","code":""},{"path":"https://mattmar.github.io/rasterdiv/news/index.html","id":"rasterdiv-010","dir":"Changelog","previous_headings":"","what":"rasterdiv 0.1.0","title":"rasterdiv 0.1.0","text":"First release includes functions compute numerical matrices following indexes: * Shannon–Wiener index diversity * Rényi entropy * Simpson index * Berger-Parker index * Hill numbers order q effective number species * Pielou evenness * Rao’s quadratic entropy * Cumulative Residual entropy","code":""}]
